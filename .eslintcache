[{"D:\\web\\project\\src\\reportWebVitals.js":"1","D:\\web\\project\\src\\index.tsx":"2","D:\\web\\project\\src\\App.tsx":"3","D:\\web\\project\\src\\Pages\\Projects\\index.tsx":"4","D:\\web\\project\\src\\Layouts\\header\\index.tsx":"5","D:\\web\\project\\src\\Layouts\\footer\\index.tsx":"6","D:\\web\\project\\src\\routes.tsx":"7","D:\\web\\project\\src\\store.tsx":"8","D:\\web\\project\\src\\Pages\\Project\\index.tsx":"9","D:\\web\\project\\src\\Reducers\\projectsReducer.tsx":"10","D:\\web\\project\\src\\Reducers\\rootReducer.tsx":"11","D:\\web\\project\\src\\Actions\\projectsAction.tsx":"12","D:\\web\\project\\src\\constants\\actionsTypes.tsx":"13","D:\\web\\project\\src\\Sagas\\projects.tsx":"14","D:\\web\\project\\src\\Enums\\projectState.ts":"15","D:\\web\\project\\src\\Ui\\Preloader\\index.tsx":"16","D:\\web\\project\\src\\Ui\\Button\\index.tsx":"17","D:\\web\\project\\src\\Pages\\Projects\\Components\\CreateProject\\index.tsx":"18","D:\\web\\project\\src\\Ui\\Select\\index.tsx":"19","D:\\web\\project\\src\\constants\\priorityList.tsx":"20","D:\\web\\project\\src\\Enums\\projectPriority.ts":"21","D:\\web\\project\\src\\Pages\\Users\\index.tsx":"22","D:\\web\\project\\src\\Reducers\\projectDesksReducer.tsx":"23","D:\\web\\project\\src\\Actions\\projectAction.tsx":"24","D:\\web\\project\\src\\Sagas\\indexProjects.tsx":"25","D:\\web\\project\\src\\Sagas\\projectDesk.tsx":"26","D:\\web\\project\\src\\Pages\\Users\\components\\createUser.tsx":"27","D:\\web\\project\\src\\Pages\\Login\\index.tsx":"28","D:\\web\\project\\src\\Sagas\\user.tsx":"29","D:\\web\\project\\src\\Reducers\\userReducer.tsx":"30","D:\\web\\project\\src\\Actions\\userAction.tsx":"31","D:\\web\\project\\src\\Layouts\\header\\components\\user\\index.tsx":"32","D:\\web\\project\\src\\protectedRoute.tsx":"33","D:\\web\\project\\src\\Reducers\\usersReducer.tsx":"34","D:\\web\\project\\src\\Sagas\\users.tsx":"35","D:\\web\\project\\src\\Actions\\usersAction.tsx":"36","D:\\web\\project\\src\\constants\\rolesList.tsx":"37","D:\\web\\project\\src\\Enums\\roles.ts":"38","D:\\web\\project\\src\\Reducers\\tasksReducer.tsx":"39","D:\\web\\project\\src\\Pages\\Tasks\\index.tsx":"40","D:\\web\\project\\src\\Actions\\tasksAction.tsx":"41","D:\\web\\project\\src\\Sagas\\tasks.tsx":"42","D:\\web\\project\\src\\constants\\taskStatusList.tsx":"43","D:\\web\\project\\src\\Enums\\taskStatus.tsx":"44","D:\\web\\project\\src\\Pages\\Tasks\\components\\createCard\\createCard.tsx":"45","D:\\web\\project\\src\\Services\\imageToB64.tsx":"46","D:\\web\\project\\src\\Pages\\Card\\index.tsx":"47","D:\\web\\project\\src\\Sagas\\card.tsx":"48","D:\\web\\project\\src\\Actions\\cardAction.tsx":"49","D:\\web\\project\\src\\Interfaces\\card.tsx":"50","D:\\web\\project\\src\\Reducers\\mainReducer.tsx":"51","D:\\web\\project\\src\\Actions\\main.tsx":"52","D:\\web\\project\\src\\constants\\cardTypes.tsx":"53","D:\\web\\project\\src\\Enums\\cardType.tsx":"54","D:\\web\\project\\src\\server.js":"55","D:\\web\\project\\src\\Reducers\\cardReducer.tsx":"56","D:\\web\\project\\src\\Pages\\404\\index.tsx":"57","D:\\web\\project\\src\\Interfaces\\project.ts":"58","D:\\web\\project\\src\\Pages\\User\\index.tsx":"59","D:\\web\\project\\src\\Ui\\Alerts\\index.tsx":"60","D:\\web\\project\\src\\Ui\\Alerts\\components\\alert\\index.tsx":"61"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"63"},{"size":826,"mtime":1616363538187,"results":"64","hashOfConfig":"63"},{"size":3345,"mtime":1617018149728,"results":"65","hashOfConfig":"63"},{"size":4531,"mtime":1616854251600,"results":"66","hashOfConfig":"63"},{"size":810,"mtime":1616363645599,"results":"67","hashOfConfig":"63"},{"size":263,"mtime":1615759842794,"results":"68","hashOfConfig":"63"},{"size":984,"mtime":1616844352700,"results":"69","hashOfConfig":"63"},{"size":610,"mtime":1612303538573,"results":"70","hashOfConfig":"63"},{"size":4299,"mtime":1616586366105,"results":"71","hashOfConfig":"63"},{"size":1283,"mtime":1616423077544,"results":"72","hashOfConfig":"63"},{"size":597,"mtime":1616588494133,"results":"73","hashOfConfig":"63"},{"size":861,"mtime":1615658319760,"results":"74","hashOfConfig":"63"},{"size":6292,"mtime":1617012484489,"results":"75","hashOfConfig":"63"},{"size":1579,"mtime":1617055169649,"results":"76","hashOfConfig":"63"},{"size":81,"mtime":1610888094673,"results":"77","hashOfConfig":"63"},{"size":181,"mtime":1612018578596,"results":"78","hashOfConfig":"63"},{"size":1168,"mtime":1616369197875,"results":"79","hashOfConfig":"63"},{"size":3081,"mtime":1616365264610,"results":"80","hashOfConfig":"63"},{"size":2518,"mtime":1616590598048,"results":"81","hashOfConfig":"63"},{"size":387,"mtime":1613831418762,"results":"82","hashOfConfig":"63"},{"size":77,"mtime":1611958040657,"results":"83","hashOfConfig":"63"},{"size":4058,"mtime":1616872762114,"results":"84","hashOfConfig":"63"},{"size":1019,"mtime":1616423321331,"results":"85","hashOfConfig":"63"},{"size":424,"mtime":1615804435738,"results":"86","hashOfConfig":"63"},{"size":588,"mtime":1616368656365,"results":"87","hashOfConfig":"63"},{"size":569,"mtime":1616368727875,"results":"88","hashOfConfig":"63"},{"size":5135,"mtime":1616847047771,"results":"89","hashOfConfig":"63"},{"size":2645,"mtime":1616784109533,"results":"90","hashOfConfig":"63"},{"size":1419,"mtime":1617016443770,"results":"91","hashOfConfig":"63"},{"size":994,"mtime":1616368408483,"results":"92","hashOfConfig":"63"},{"size":534,"mtime":1612910506050,"results":"93","hashOfConfig":"63"},{"size":1169,"mtime":1616847703533,"results":"94","hashOfConfig":"63"},{"size":809,"mtime":1616587115936,"results":"95","hashOfConfig":"63"},{"size":1301,"mtime":1617058030870,"results":"96","hashOfConfig":"63"},{"size":1643,"mtime":1617056267911,"results":"97","hashOfConfig":"63"},{"size":950,"mtime":1617055681340,"results":"98","hashOfConfig":"63"},{"size":280,"mtime":1613223481572,"results":"99","hashOfConfig":"63"},{"size":90,"mtime":1613223480632,"results":"100","hashOfConfig":"63"},{"size":2846,"mtime":1616423358944,"results":"101","hashOfConfig":"63"},{"size":7281,"mtime":1616593494889,"results":"102","hashOfConfig":"63"},{"size":1324,"mtime":1616245939460,"results":"103","hashOfConfig":"63"},{"size":2136,"mtime":1617027714907,"results":"104","hashOfConfig":"63"},{"size":385,"mtime":1614624431840,"results":"105","hashOfConfig":"63"},{"size":83,"mtime":1613303145366,"results":"106","hashOfConfig":"63"},{"size":3454,"mtime":1616370751270,"results":"107","hashOfConfig":"63"},{"size":336,"mtime":1613866569379,"results":"108","hashOfConfig":"63"},{"size":6672,"mtime":1616593516836,"results":"109","hashOfConfig":"63"},{"size":1216,"mtime":1617027929457,"results":"110","hashOfConfig":"63"},{"size":685,"mtime":1616591097915,"results":"111","hashOfConfig":"63"},{"size":281,"mtime":1613302824894,"results":"112","hashOfConfig":"63"},{"size":826,"mtime":1617022102647,"results":"113","hashOfConfig":"63"},{"size":306,"mtime":1616583007642,"results":"114","hashOfConfig":"63"},{"size":261,"mtime":1614519921574,"results":"115","hashOfConfig":"63"},{"size":53,"mtime":1614519136462,"results":"116","hashOfConfig":"63"},{"size":16780,"mtime":1617056204201,"results":"117","hashOfConfig":"63"},{"size":863,"mtime":1616592592663,"results":"118","hashOfConfig":"63"},{"size":300,"mtime":1616262789518,"results":"119","hashOfConfig":"63"},{"size":194,"mtime":1615658329348,"results":"120","hashOfConfig":"63"},{"size":6775,"mtime":1617056357241,"results":"121","hashOfConfig":"63"},{"size":679,"mtime":1617018775923,"results":"122","hashOfConfig":"63"},{"size":1066,"mtime":1617022001686,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1lgk7ik",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"129"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"129"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"129"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"129"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"129"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"129"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"129"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"129"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"129"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"129"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"129"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"129"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"129"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"129"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"129"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"129"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"129"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"129"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"129"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"129"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"129"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"129"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"129"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"129"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"129"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"129"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"129"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"129"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"129"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"D:\\web\\project\\src\\reportWebVitals.js",[],["278","279"],"D:\\web\\project\\src\\index.tsx",[],["280","281"],"D:\\web\\project\\src\\App.tsx",["282","283","284","285","286","287","288","289","290","291","292","293"],"import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route, withRouter, Redirect, useLocation, RouteComponentProps, matchPath} from 'react-router-dom';\nimport { Header } from './Layouts/header';\nimport { Footer } from './Layouts/footer';\nimport { Routes } from './routes';\nimport { Npage }  from './Pages/404';\nimport * as mainCreators from './Actions/main';\nimport * as userCreators from './Actions/userAction';\nimport * as usersCreators from './Actions/usersAction';\nimport * as projectsCreators from './Actions/projectsAction';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ProtectedRoute } from './protectedRoute';\nimport  Login  from './Pages/Login';\nimport { State } from './Interfaces/state';\n\nimport './App.css';\nimport './main.scss';\nimport './Ui/ui.scss';\nimport { Preloader } from './Ui/Preloader';\nimport { Project } from './Interfaces/project';\nimport { AlertsComponent } from './Ui/Alerts';\n\n// todo props type\n\nconst App: React.FunctionComponent = (props: any) =>  {\n  \n  const ft = localStorage.getItem('id');\n\n  useEffect(() => {\n    if(ft){\n      props.getUser();\n      props.getProjects();\n      props.getUsers();\n    }else{\n      props.history.push('/login')\n    }\n\n   }, [ft])\n\n   useEffect(() => {\n    if(props.projects.length && props.user){\n      props.projectLoaded();\n      if(match?.params.projectId){\n        props.changeCurrentProject(props.projects.findIndex((item: Project) => item.id == match?.params.projectId));\n      }\n    }\n    \n   }, [props.projects.length && props.user])\n\n   const match: any = matchPath(props.history.location.pathname, {\n     path: \"/project/:projectId\"\n   }) \n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n      <div className=\"page-bg\" style={props.projects[props.currentProject]?.image ? {backgroundImage: `url(${props.projects[props.currentProject]?.image})`} : {background: `none`}}>\n                \n      </div>\n      { props.location.pathname !== '/login' && <Header data={props.user} />}\n\n      \n      <div className={`main ${props.location.pathname === '/login' && 'main--start' || ''}`}>\n           <Switch>\n            {\n              //todo return protected routes\n              Routes.map((route) => <ProtectedRoute isAuthenticaton={true} projectLoaded={props.projectReady} exact path={route.path} component={route.component} key={route.path} />)\n            }\n            <Route excat path='/login' component={Login}></Route>\n            <Route component={Npage}></Route>\n          </Switch>\n      </div>\n      <AlertsComponent alerts={props.actions} />\n      <Footer />\n      \n      </div>\n</div>\n  )\n\n}\n\nconst mapStateToProps = (state: State) => {\n  return {\n      projectDesks: state.projectDesks.projectDesks,\n      projects: state.projects.projects,\n      currentProject: state.main.currentProject,\n      projectReady: state.main.projectLoaded,\n      loading: state.projectDesks.loading,\n      user: state.user.user,\n      isLogin: state.user.isLogin,\n      actions: state.main.actions\n  }\n}\n\n//todo dispatch type\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({...userCreators, ...projectsCreators, ...usersCreators, ...mainCreators} ,dispatch)\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\n","D:\\web\\project\\src\\Pages\\Projects\\index.tsx",["294","295","296","297"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {bindActionCreators} from 'redux'\r\nimport * as projectsCreators from '../../Actions/projectsAction'\r\nimport * as mainCreators from '../../Actions/main'\r\nimport { projectState } from '../../Enums/projectState';\r\nimport { Project } from '../../Interfaces/project';\r\nimport { Button } from '../../Ui/Button';\r\nimport { Preloader } from '../../Ui/Preloader';\r\nimport { CreateProject } from './Components/CreateProject';\r\nimport { TransitionGroup,  CSSTransition } from 'react-transition-group'\r\n\r\nimport './style.scss'\r\nimport { State } from '../../Interfaces/state';\r\n\r\n\r\n//todo actions interfaces\r\n//todo rewrite card to component\r\n\r\ninterface projects {\r\n    addProject: Function;\r\n    getProjects: Function;\r\n    projects: Project[];\r\n    currentProject: number;\r\n    changeCurrentProject: Function;\r\n    loading: boolean;\r\n}\r\n\r\nconst Projects: React.FunctionComponent<projects> = (props: projects) => {\r\n\r\n    const [createProject, setCreateProject] = useState(false);\r\n    const [cProject, setProject] = useState(props.currentProject);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', moveProjects)\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', moveProjects);\r\n        }\r\n\r\n    },[])\r\n\r\n    let currentProjectPos = cProject;\r\n\r\n    const itemClick = (index: number) => {   \r\n        props.changeCurrentProject(index);        \r\n    }\r\n\r\n    const moveProjects = (e: KeyboardEvent) => {\r\n        if((e.key === \"ArrowLeft\" || e.key === \"ArrowDown\") && currentProjectPos > 0){\r\n            currentProjectPos -= 1; \r\n        }else if((e.key === \"ArrowRight\" || e.key === \"ArrowUp\") && + currentProjectPos < props.projects.length - 1){\r\n            currentProjectPos += 1; \r\n        }\r\n        props.changeCurrentProject(currentProjectPos); \r\n        setProject(currentProjectPos)\r\n    }    \r\n\r\n    const addProject = () => setCreateProject(!createProject);\r\n\r\n    const createNewProject = (item: Project) => {\r\n        props.addProject(item);\r\n        props.changeCurrentProject(props.projects.length);\r\n        addProject();\r\n    }    \r\n\r\n        return(\r\n            <div className=\"page\">\r\n                <div className=\"page-header\">\r\n        \r\n                </div>\r\n                <div className=\"page-content page-content--center\">\r\n                   {createProject && <CreateProject createProject={createNewProject} />}\r\n                   <div className={`projects ${ createProject ? 'projects--hidden' : ''}`}>\r\n                   {\r\n                   props.loading ? <Preloader/> : ( props.projects.length ? <div className=\"projects-container\" style={{transform: `${'translateX'}(-${props.currentProject * (100/props.projects.length)}%)`}}>\r\n                        \r\n                        {props.projects.map((project, index) => \r\n\r\n                                <div key={project.id} style={project.image ? {backgroundImage: `url(${project.image})`} : {backgroundColor: '#a1a1a1'}} className={`projects-item ${ index == props.currentProject ? 'projects-item--active' : ''}`} onClick={() => itemClick(+index)}>\r\n                                    <div className=\"projects-item__title\"><Link className=\"project-link\" to={`project/${project.id}`}>{project.title}</Link></div>\r\n                                    <div className=\"projects-item__status\">{projectState[project.state]}</div>\r\n                                </div>\r\n                            \r\n                            )}\r\n                           \r\n                        </div> : <h2 className=\"empty-title\">PROJECT LIST IS EMPTY</h2>) \r\n                    }\r\n                </div>\r\n            \r\n                </div>\r\n                <div className=\"page__footer projects-page__footer\">\r\n                    <Button title=\"Create project\" titleActive=\"Close project\" type=\"large\" onClick={addProject} active={createProject}></Button>\r\n                </div>\r\n            </div>\r\n            )\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        projects: state.projects.projects,\r\n        currentProject: state.main.currentProject,\r\n        loading: state.projects.loading\r\n    }\r\n}\r\n\r\n//todo dispatch type\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return bindActionCreators({...projectsCreators, ...mainCreators}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects)","D:\\web\\project\\src\\Layouts\\header\\index.tsx",[],"D:\\web\\project\\src\\Layouts\\footer\\index.tsx",[],"D:\\web\\project\\src\\routes.tsx",["298","299"],"import { RouteType } from \"./Interfaces/route\";\r\nimport  Projects  from \"./Pages/Projects\";\r\nimport ProjectC from \"./Pages/Project\";\r\nimport Users from \"./Pages/Users\";\r\nimport Login from \"./Pages/Login\";\r\nimport Tasks from \"./Pages/Tasks\";\r\nimport CardComponent from \"./Pages/Card\";\r\nimport Profile from \"./Pages/User\";\r\n\r\nexport const Routes = [\r\n    {\r\n      name: 'Projects',\r\n      path: '/',\r\n      component: Projects,\r\n      menu: true\r\n    },\r\n    {\r\n      name: 'Project',\r\n      path: '/project/:projectId',\r\n      component: ProjectC,\r\n    },\r\n    {\r\n      name: 'Users',\r\n      path: '/users',\r\n      component: Users,\r\n      menu: true\r\n    },\r\n    {\r\n      name: 'Profile',\r\n      path: '/users/:userId',\r\n      component: Profile,\r\n    },\r\n    {\r\n      name: 'Tasks',\r\n      path: '/project/:projectId/:deskId',\r\n      component: Tasks,\r\n    },\r\n    {\r\n      name: 'Card',\r\n      path: '/project/:projectId/:deskId/:cardId',\r\n      component: CardComponent\r\n    }\r\n  ]","D:\\web\\project\\src\\store.tsx",[],"D:\\web\\project\\src\\Pages\\Project\\index.tsx",["300","301","302","303"],"import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps, RouteProps } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as projectCreators from '../../Actions/projectAction';\r\nimport * as mainCreators from '../../Actions/main';\r\nimport * as projectsCreators from '../../Actions/projectsAction';\r\nimport { ProjectDesk, ProjectDeskResult } from '../../Interfaces/projectDesk';\r\nimport { Preloader } from '../../Ui/Preloader';\r\nimport { AppActions } from '../../constants/actionsTypes';\r\nimport { Button } from '../../Ui/Button';\r\nimport { State } from '../../Interfaces/state';\r\nimport { Project } from '../../Interfaces/project';\r\n\r\nimport './style.scss'\r\n\r\ninterface project {\r\n    getProjectDesks: Function,\r\n    getProjectDesksReceived: Function,\r\n    removeProject: Function,\r\n    changeCurrentProject: Function,\r\n    currentProject: number,\r\n    projectDesks: ProjectDeskResult,\r\n    projects: Project[];\r\n    loading: boolean\r\n}\r\n\r\ninterface project_state {\r\n    // todo type any\r\n    projectParams: any;\r\n}\r\n\r\nclass ProjectC extends React.Component<project & RouteComponentProps, project_state> {\r\n    // todo type any\r\n    // rewrite functional component\r\n    constructor(props: any){\r\n        super(props)\r\n        this.state = {\r\n            projectParams: this.props.match.params\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.getProjectDesks(this.state.projectParams.projectId);\r\n    }\r\n\r\n    removeProject(){\r\n        this.props.history.push('/')\r\n        this.props.removeProject(this.state.projectParams.projectId);\r\n        this.props.changeCurrentProject(this.props.currentProject !== 0 ? this.props.currentProject - 1 : this.props.currentProject)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"page\">\r\n                    <div className=\"page-header\">\r\n                        <Button className={'page-header__button--left'} align=\"left\" title=\"TO PROJECTS\" type=\"large\" img={'<i class=\"fas fa-chevron-left\"></i>'} onClick={this.props.history.goBack} />\r\n                        <div className=\"page-header__title\">\r\n                            <h2 className=\"page-title\">Project</h2>\r\n                        </div> \r\n                        <Button onClick={() => this.removeProject()} className={\"page-header__button--right\"} align=\"right\" title=\"REMOVE PROJECT\" type=\"large\" img=\"-\"/>\r\n                        <div className=\"page-header__settings\"></div>\r\n                    </div>\r\n                    <div className=\"page-content page-content--center\">\r\n                        <div className=\"project\">\r\n                        {this.props.loading ? <Preloader/> : (this.props.projectDesks.desks.length ? <div className=\"project-container\">\r\n                               {\r\n                                    \r\n                                    this.props.projectDesks.desks.map((desk, index) => \r\n                                        <div className=\"project-item\" key={index}>\r\n                                            <div className=\"project-item__title\">\r\n                                                <Link className=\"project-link\" to={`${this.state.projectParams.projectId}/${desk.id}`}>\r\n                                                    {desk.title}\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div> : <h2 className=\"empty-title\">DESKS LIST IS EMPTY</h2>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        projects: state.projects.projects,\r\n        projectDesks: state.projectDesks.projectDesks,\r\n        currentProject: state.main.currentProject,\r\n        loading: state.projectDesks.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return bindActionCreators({...mainCreators, ...projectCreators, ...projectsCreators}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ProjectC);\r\n    ","D:\\web\\project\\src\\Reducers\\projectsReducer.tsx",["304","305","306","307","308","309"],"import { combineReducers } from \"redux\";\r\nimport { AppActions } from \"../constants/actionsTypes\";\r\nimport { Project } from \"../Interfaces/project\";\r\nimport { AppState } from \"../store\";\r\n\r\ninterface initialProject {\r\n    projects: Project[];\r\n    loading: boolean;\r\n}\r\n\r\nconst initialState: initialProject = {\r\n    projects: [\r\n\r\n    ],\r\n    loading: true\r\n}\r\n\r\nexport const projectsReducer = (state = initialState, action: AppActions) => {\r\n    switch(action.type) {\r\n        case 'GET_PROJECTS':\r\n            return {...state, loading: true};\r\n            break;\r\n        case 'PROJECTS_RECEIVED':\r\n            return {...state, projects: action.json, loading: false};\r\n            break;    \r\n        case 'ADD_PROJECT':\r\n            return {...state};\r\n            break;\r\n        case 'ADD_PROJECT_RECEIVED':\r\n            console.log(action);\r\n            return {\r\n                ...state, projects: [\r\n                    ...state.projects, action.item\r\n                ]\r\n            } \r\n            break;\r\n        case 'REMOVE_PROJECT':\r\n            return {\r\n                ...state, projects: [\r\n                    ...state.projects.filter(project => project.id !== action.id)\r\n                ]\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}","D:\\web\\project\\src\\Reducers\\rootReducer.tsx",[],"D:\\web\\project\\src\\Actions\\projectsAction.tsx",[],"D:\\web\\project\\src\\constants\\actionsTypes.tsx",["310","311"],"import { Task } from \"redux-saga\";\r\nimport { Alert } from \"../Interfaces/alert\";\r\nimport { Card } from \"../Interfaces/card\";\r\nimport { Project } from \"../Interfaces/project\"\r\nimport { ProjectDesk, ProjectDeskResult } from \"../Interfaces/projectDesk\";\r\nimport { User } from \"../Interfaces/user\";\r\n\r\nexport enum actionsTypes {\r\n\r\n    PROJECT_LOADED = \"PROJECT_LOADED\",\r\n    CURRENT_PROJECT = \"CURRENT_PROJECT\",\r\n\r\n    GET_PROJECTS = \"GET_PROJECTS\",\r\n    PROJECTS_RECEIVED = \"PROJECTS_RECEIVED\",\r\n    ADD_PROJECT = \"ADD_PROJECT\",\r\n    ADD_PROJECT_RECEIVED = \"ADD_PROJECT_RECEIVED\",\r\n    UPDATE_PROJECT = \"UPDATE_PROJECT\",\r\n    REMOVE_PROJECT = \"REMOVE_PROJECT\",\r\n\r\n    GET_PROJECT_DESKS = \"GET_PROJECT_DESKS\",\r\n    PROJECT_DESKS_RECEIVED = \"PROJECT_DESKS_RECEIVED\",\r\n    ADD_PROJECT_DESK = \"ADD_PROJECT_DESK\",\r\n    ADD_PROJECT_DESK_RECEIVED = \"ADD_PROJECT_DESK_RECEIVED\",\r\n    UPDATE_PROJECT_DESK = \"UPDATE_PROJECT_DESK\",\r\n    REMOVE_PROJECT_DESK = \"REMOVE_PROJECT_DESK\",\r\n    REMOVE_PROJECT_DESKS = \"REMOVE_PROJECT_DESKS\",\r\n\r\n    USER_LOGIN = \"USER_LOGIN\",\r\n    USER_LOGIN_RECEIVED = \"USER_LOGIN_RECEIVED\",\r\n    USER_LOGOUT = \"USER_LOGOUT\",\r\n    GET_USER = 'GET_USER',\r\n\r\n    GET_USERS = \"GET_USERS\",\r\n    USERS_RECEIVED = \"USERS_RECEIVED\",\r\n    ADD_USER = \"ADD_USER\",\r\n    ADD_USER_RECEIVED = \"ADD_USER_RECEIVED\",\r\n    UPDATE_USER = \"UPDATE_USER\",\r\n    UPDATE_USER_RECEIVED = \"UPDATE_USER_RECEIVED\",\r\n    REMOVE_USER = \"REMOVE_USER\",\r\n\r\n    GET_TASKS = \"GET_TASKS\",\r\n    TASKS_RECEIVED = \"TASKS_RECEIVED\",\r\n    ADD_TASK = \"ADD_TASK\",\r\n    ADD_TASK_RECEIVED = \"ADD_TASK_RECEIVED\",\r\n    REMOVE_CARD = \"REMOVE_CARD\",\r\n    REMOVE_CARD_RECEIVED = \"REMOVE_CARD_RECEIVED\",\r\n    CHANGE_CARD_POSITION = \"CHANGE_CARD_POSITION\",\r\n    CHANGE_CARD_POSITION_RECEIVED = \"CHANGE_CARD_POSITION_RECEIVED\",\r\n\r\n    GET_CARD = \"GET_CARD\",\r\n    CARD_RECEIVED = \"CARD_RECEIVED\",\r\n    EDIT_CARD = \"EDIT_CARD\",\r\n    EDIT_CARD_RECEIVED = \"EDIT_CARD_RECEIVED\",\r\n\r\n    ACTION = \"ACTION\"\r\n\r\n\r\n}\r\n\r\nexport interface ProjectLoaded {\r\n    type: typeof actionsTypes.PROJECT_LOADED\r\n}\r\n\r\nexport interface CurrentProject {\r\n    type: typeof actionsTypes.CURRENT_PROJECT,\r\n    project: number\r\n}\r\n\r\nexport interface GetProjectsAction {\r\n    type: typeof actionsTypes.GET_PROJECTS,\r\n}\r\n\r\nexport interface ProjectsReceived {\r\n    type: typeof actionsTypes.PROJECTS_RECEIVED,\r\n    json: Project[]\r\n}\r\n\r\nexport interface AddProjectAction {\r\n    type: typeof actionsTypes.ADD_PROJECT,\r\n    item: Project\r\n}\r\n\r\nexport interface AddProjectReceived {\r\n    type: typeof actionsTypes.ADD_PROJECT_RECEIVED,\r\n    item: Project\r\n}\r\n\r\nexport interface RemoveProject {\r\n    type: typeof actionsTypes.REMOVE_PROJECT,\r\n    id: number\r\n}\r\n\r\nexport interface GetProjectDesks {\r\n    type: typeof actionsTypes.GET_PROJECT_DESKS,\r\n    json: number\r\n}\r\n\r\nexport interface ProjectDesksReceived {\r\n    type: typeof actionsTypes.PROJECT_DESKS_RECEIVED,\r\n    json: ProjectDeskResult\r\n}\r\n\r\nexport interface ProjectDeskRemoved {\r\n    type: typeof actionsTypes.REMOVE_PROJECT_DESK,\r\n    json: number[]\r\n}\r\n\r\nexport interface ProjectDesksRemoved {\r\n    type: typeof actionsTypes.REMOVE_PROJECT_DESKS,\r\n    json: number\r\n}\r\n\r\nexport interface UserLogin {\r\n    type: typeof actionsTypes.USER_LOGIN,\r\n    json: User\r\n}\r\n\r\nexport interface UserLoginReceived {\r\n    type: typeof actionsTypes.USER_LOGIN_RECEIVED,\r\n    json: User\r\n}\r\n\r\nexport interface UserLogout {\r\n    type: typeof actionsTypes.USER_LOGOUT,\r\n}\r\n\r\nexport interface GetUser {\r\n    type: typeof actionsTypes.GET_USER\r\n}\r\n\r\nexport interface GetUsers {\r\n    type: typeof actionsTypes.GET_USERS\r\n}\r\n\r\nexport interface GetUsersReceived {\r\n    type: typeof actionsTypes.USERS_RECEIVED,\r\n    json: User[]\r\n}\r\n\r\nexport interface AddUser {\r\n    type: typeof actionsTypes.ADD_USER,\r\n    json: User\r\n}\r\n\r\nexport interface UpdateUser {\r\n    type: typeof actionsTypes.UPDATE_USER,\r\n    json: User\r\n}\r\n\r\nexport interface UpdateUserReceived {\r\n    type: typeof actionsTypes.UPDATE_USER_RECEIVED,\r\n    json: User\r\n}\r\n\r\nexport interface AddUserReceived {\r\n    type: typeof actionsTypes.ADD_USER_RECEIVED,\r\n    json: User\r\n}\r\n\r\nexport interface RemoveUser {\r\n    type: typeof actionsTypes.REMOVE_USER,\r\n}\r\n\r\nexport interface GetTasks {\r\n    type: typeof actionsTypes.GET_TASKS,\r\n    json: {\r\n        deskId: number,\r\n        userId: number\r\n    }\r\n}\r\n\r\nexport interface TasksReceived {\r\n    type: typeof actionsTypes.TASKS_RECEIVED,\r\n    json: Card[]\r\n}\r\n\r\nexport interface AddTask {\r\n    type: typeof actionsTypes.ADD_TASK,\r\n    json: Card\r\n}\r\n\r\nexport interface AddTaskReceived {\r\n    type: typeof actionsTypes.ADD_TASK_RECEIVED,\r\n    json: Card\r\n}\r\n\r\nexport interface RemoveCard {\r\n    type: typeof actionsTypes.REMOVE_CARD,\r\n    id: number\r\n}\r\n\r\nexport interface RemoveCardReceived {\r\n    type: typeof actionsTypes.REMOVE_CARD_RECEIVED,\r\n    id: number\r\n}\r\n\r\nexport interface ChangeCardPosition {\r\n    type: typeof actionsTypes.CHANGE_CARD_POSITION,\r\n    json: {\r\n        id: number,\r\n        status: number\r\n    },\r\n    testOrder: number\r\n}\r\n\r\nexport interface ChangeCardPositionReceived {\r\n    type: typeof actionsTypes.CHANGE_CARD_POSITION_RECEIVED,\r\n    json: Card\r\n}\r\n\r\nexport interface GetCard {\r\n    type: typeof actionsTypes.GET_CARD,\r\n    id: number\r\n}\r\n\r\nexport interface CardReceived {\r\n    type: typeof actionsTypes.CARD_RECEIVED,\r\n    json: Card\r\n}\r\n\r\nexport interface EditCard {\r\n    type: typeof actionsTypes.EDIT_CARD,\r\n    json: {\r\n        id: number,\r\n        card: Card\r\n    }\r\n}\r\n\r\nexport interface EditCardReceived {\r\n    type: typeof actionsTypes.EDIT_CARD_RECEIVED,\r\n    json: Card\r\n}\r\n\r\nexport interface ActionAlert {\r\n    type: typeof actionsTypes.ACTION,\r\n    json: Alert\r\n}\r\n\r\nexport type AppActions = ProjectLoaded | CurrentProject | GetProjectsAction | ProjectsReceived | \r\nAddProjectAction | AddProjectReceived | GetProjectDesks | RemoveProject | \r\nProjectDesksReceived | UserLogin | UserLoginReceived | ProjectDeskRemoved | ProjectDesksRemoved | UserLogout | GetUser |\r\nGetUsers | GetUsersReceived | AddUser | AddUserReceived | UpdateUser | UpdateUserReceived | RemoveUser | GetTasks |\r\nTasksReceived | AddTask | AddTaskReceived | RemoveCard | RemoveCardReceived | ChangeCardPosition | ChangeCardPositionReceived |\r\nGetCard | CardReceived | EditCard | EditCardReceived | ActionAlert","D:\\web\\project\\src\\Sagas\\projects.tsx",["312","313","314","315"],"D:\\web\\project\\src\\Enums\\projectState.ts",[],"D:\\web\\project\\src\\Ui\\Preloader\\index.tsx",[],"D:\\web\\project\\src\\Ui\\Button\\index.tsx",[],"D:\\web\\project\\src\\Pages\\Projects\\Components\\CreateProject\\index.tsx",["316","317","318","319","320"],"import { DragEvent, FormEvent, useState } from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport { priorityList } from '../../../../constants/priorityList'\r\nimport { projectPriority } from '../../../../Enums/projectPriority'\r\nimport { projectState } from '../../../../Enums/projectState'\r\nimport { Project } from '../../../../Interfaces/project'\r\nimport { imageToB64 } from '../../../../Services/imageToB64'\r\nimport { Select } from '../../../../Ui/Select'\r\nimport './style.scss'\r\n\r\ntype createProject = {\r\n    createProject: Function;\r\n}\r\n\r\ntype createProjectForm = {\r\n    img: string;\r\n    title: string;\r\n    priority: number;\r\n}\r\n\r\nexport const CreateProject: React.FunctionComponent<createProject> = (props) => {\r\n\r\n    const { register, setValue, handleSubmit, errors} = useForm<createProjectForm>();\r\n\r\n    const [img, setImg] = useState('');\r\n\r\n    //todo any type\r\n\r\n    const imageUpload = async (e: any) => {\r\n        let img: any = await imageToB64(e.files[0]);\r\n        setImg(img)\r\n    }\r\n\r\n    const imageUploadField = (e: DragEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let image = e.dataTransfer;\r\n        imageUpload(image)\r\n    }\r\n\r\n    const onSubmit = (project: Project) => {\r\n        const item = {\r\n            title: project.title,\r\n            state: projectState.progress,\r\n            priority: projectPriority.hight,\r\n            date: new Date(),\r\n            image: img,\r\n            createdBy: 0\r\n        }\r\n\r\n        props.createProject(item);\r\n    \r\n    }    \r\n\r\n    \r\n\r\n    return(\r\n    <div className=\"createProject modal\">\r\n        <div className=\"modal-header\">\r\n            <h3 className=\"modal-header__title\">Create project</h3>\r\n        </div>\r\n        <div className=\"modal-container\">\r\n            <div className=\"createProject-container\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"createProject-container__item\">\r\n                    <div className=\"upload-field\" onDragOver={(e) => e.preventDefault()} onDrop={(e) => imageUploadField(e)}>\r\n                        <label className=\"upload-field__label\" htmlFor=\"img\"></label>\r\n                        <span className={`upload-field__span ${img && 'upload-field__span--active'}`}>Upload file</span>\r\n                        <img className={`upload-field__img ${img && 'upload-field__img--active'}`} src={img} />\r\n                        <input className={`upload-field__input ${errors.title ? 'upload-field__input--error' : ''}`} autoComplete=\"off\" placeholder=\"Enter project title\" name=\"title\" ref={register({required: true})} />\r\n                    </div>   \r\n                    <input hidden onChange={(e) => imageUpload(e.target)} id=\"img\" className=\"input\" type=\"file\" accept=\"image/*\" name=\"img\" ref={register} />\r\n                </div>\r\n                <div className=\"createProject-container__item\">\r\n                    <button className=\"button\" type=\"submit\">Create </button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","D:\\web\\project\\src\\Ui\\Select\\index.tsx",["321","322","323"],"import { useEffect, useState } from 'react'\r\nimport './style.scss'\r\n\r\ntype selectProps = {\r\n    default?: number;\r\n    placeholder?: string;\r\n    search?: boolean;\r\n    searchName?: string;\r\n    optionName?: string;\r\n    readonly?: boolean;\r\n    items: any[];\r\n    register: any;\r\n    name: string;\r\n    mode?: string;  // points // teams // users\r\n}\r\n\r\nexport const Select: React.FunctionComponent<selectProps> = (props) => {\r\n\r\n    const defaultItem = props.default ? props.items.find(item => item['id' || props.searchName?.toLowerCase()] == props.default) : props.items[0]\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [value, setValue] = useState(defaultItem);\r\n\r\n    \r\n    const select = (selectedItem: any) => {    \r\n        let item = props.items.find(item => item['id' || props.searchName?.toLowerCase()] == selectedItem['id' || props.searchName?.toLowerCase()]);\r\n        setValue(item);\r\n        setActive(false);  \r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', selectHide)\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', selectHide);\r\n        }\r\n\r\n\r\n    },[])\r\n\r\n    const selectHide = (event: any) => {\r\n        const select = document.querySelector('.select');\r\n        \r\n        if(!event.target.classList.contains('select-items__item') && !event.target.classList.contains('select-input')){\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"select\" onBlur={() => setActive(false)}>\r\n            <div className=\"select-field\" onClick={() => setActive(!active)}>\r\n                <input name={props.name} placeholder={props.placeholder} value={value['id' || props.optionName]} className=\"select-input\" readOnly={!props.search || true} autoComplete=\"off\" ref={props.register}></input>\r\n                {value && <div className=\"select-field__content\">\r\n                    {value.color && <div className={`item-circle ${value.color}`}></div>}{value.name}\r\n                </div>}\r\n            </div>\r\n            {active && <div className=\"select-items\">\r\n                {props.items.map((item, index) => \r\n                    \r\n                    <div onMouseDown={() => select(item)} key={index} className=\"select-items__item\">\r\n                        {item.color && <div className={`item-circle ${item.color}`}></div>}{item.name}\r\n                    </div>\r\n                    \r\n                )}\r\n                \r\n            </div>}\r\n        </div>\r\n    )\r\n    \r\n}","D:\\web\\project\\src\\constants\\priorityList.tsx",[],"D:\\web\\project\\src\\Enums\\projectPriority.ts",[],"D:\\web\\project\\src\\Pages\\Users\\index.tsx",["324","325"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { User } from '../../Interfaces/user';\r\nimport { Button } from '../../Ui/Button';\r\nimport { CreateUser } from './components/createUser';\r\nimport * as usersCreators from '../../Actions/usersAction'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Preloader } from '../../Ui/Preloader';\r\nimport { rolesList } from '../../constants/rolesList';\r\nimport './style.scss'\r\nimport { State } from '../../Interfaces/state';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype users = {\r\n    newUser: Function,\r\n    users: User[],\r\n    loading: boolean,\r\n    history: any\r\n}\r\n\r\nclass Users extends React.Component<users> {\r\n\r\n    state = {\r\n        createUserForm: false\r\n    }\r\n\r\n    createUserForm = () => this.setState({createUserForm: !this.state.createUserForm})\r\n    createUser = (user: User) => {\r\n        this.props.newUser(user);\r\n        this.setState({createUserForm: false})\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <PerfectScrollbar>\r\n            <div className=\"page\">\r\n                    <div className=\"page-header\">\r\n                    <Button className={'page-header__button--left'} align=\"left\" title=\"To projects\" type=\"large\" img={'<i class=\"fas fa-chevron-left\"></i>'} onClick={() => this.props.history.push('/')} />\r\n                        <div className=\"page-header__title\">\r\n                            <h2 className=\"page-title\">Users</h2>\r\n                        </div> \r\n                        <Button className=\"page-header__button--right\" title=\"Create new user\" align=\"right\" titleActive=\"Close new user\" type=\"large\" onClick={this.createUserForm} active={this.state.createUserForm} />\r\n                    </div>\r\n                    <div className=\"page-content\">\r\n                        {this.props.loading ? <Preloader /> : <div className=\"users\">\r\n                            {this.state.createUserForm ? <CreateUser createUser={this.createUser}/> :\r\n                                rolesList.map(role => \r\n                                    <div className=\"users-department\" key={role.id}>\r\n                                       <div className=\"users-department__title\">{role.name}</div>\r\n                                       <div className=\"users-department__container\">\r\n                                           {\r\n                                               this.props.users.length ? this.props.users.map((user, index) => \r\n                                                \r\n                                                user.role == role.id && <Link className=\"user\" key={index} to={`users/${user.id}`}>\r\n                                                    <div className=\"user__avatar\">{user.avatar && <img className=\"user__img\" src={user.avatar} />}</div>\r\n                                                    <div className=\"user__info\">\r\n                                                        <div className=\"user__name\">{user.name}</div>\r\n                                                        <div className=\"user__position\">{rolesList[user.role].name}</div>\r\n                                                    </div>\r\n                                                </Link>\r\n\r\n                                                ) : <div className=\"user--empty\">-----</div>\r\n                                           }\r\n                                       </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                </PerfectScrollbar>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        users: state.users.users,\r\n        loading: state.users.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return bindActionCreators(usersCreators, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\r\n    ","D:\\web\\project\\src\\Reducers\\projectDesksReducer.tsx",["326","327","328","329","330","331"],"import { combineReducers } from \"redux\";\r\nimport { AppActions } from \"../constants/actionsTypes\";\r\nimport { ProjectDeskResult } from \"../Interfaces/projectDesk\";\r\nimport { AppState } from \"../store\";\r\n\r\ninterface initialProject {\r\n    projectDesks: ProjectDeskResult | {}\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: initialProject = {\r\n    projectDesks: {\r\n        project: {},\r\n        desks: []\r\n    },\r\n    loading: true\r\n}\r\n\r\nexport const projectDesksReducer = (state = initialState, action: AppActions) => {\r\n    switch(action.type) {\r\n        case 'GET_PROJECT_DESKS':\r\n            return {...state, loading: true};\r\n            break;\r\n        case 'PROJECT_DESKS_RECEIVED':\r\n            return {...state, projectDesks: action.json, loading: false};\r\n            break;\r\n        case 'REMOVE_PROJECT_DESK':\r\n            return {...state}\r\n            break;\r\n        case 'REMOVE_PROJECT_DESKS':\r\n            return {...state}\r\n            break;        \r\n        default:\r\n            return state\r\n    }\r\n}","D:\\web\\project\\src\\Actions\\projectAction.tsx",["332"],"import  {actionsTypes, AppActions} from '../constants/actionsTypes'\r\nimport { ProjectDesk, ProjectDeskResult } from '../Interfaces/projectDesk'\r\n\r\nexport const getProjectDesks = (id: number) => ({\r\n    type: actionsTypes.GET_PROJECT_DESKS,\r\n    json: id\r\n})\r\n\r\nexport const projectDesksReceived = (projectDesks: ProjectDeskResult): AppActions => ({\r\n    type: actionsTypes.PROJECT_DESKS_RECEIVED,\r\n    json: projectDesks\r\n})","D:\\web\\project\\src\\Sagas\\indexProjects.tsx",["333","334"],"import { all, put, takeLatest } from \"redux-saga/effects\"\r\nimport actionProjectsWatcher from \"./projects\"\r\nimport actionProjectDesksWatcher from \"./projectDesk\"\r\nimport actionUserWatcher from \"./user\"\r\nimport actionUsersWatcher from \"./users\"\r\nimport actionTasksWatcher from \"./tasks\"\r\nimport actionCardWatcher from \"./card\"\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        actionProjectsWatcher(),\r\n        actionProjectDesksWatcher(),\r\n        actionUserWatcher(),\r\n        actionUsersWatcher(),\r\n        actionTasksWatcher(),\r\n        actionCardWatcher()\r\n    ]);\r\n}","D:\\web\\project\\src\\Sagas\\projectDesk.tsx",["335","336","337","338"],"import { rejects } from \"assert\";\r\nimport { resolve } from \"path\";\r\nimport { all, call, put, takeEvery, takeLatest } from \"redux-saga/effects\"\r\n\r\n\r\nfunction* getProjectDesks(action: any) {\r\n    const json = yield fetch(`/api/projectDesks/${action.json}`).then(response => response.json(), )\r\n    yield put({type:\"PROJECT_DESKS_RECEIVED\", json: json})\r\n}\r\n\r\nfunction* actionProjectDesksWatcher() {\r\n    yield takeEvery(\"GET_PROJECT_DESKS\", getProjectDesks)\r\n}\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        actionProjectDesksWatcher(),\r\n    ]);\r\n}\r\n\r\n","D:\\web\\project\\src\\Pages\\Users\\components\\createUser.tsx",["339","340","341","342","343","344"],"import { DragEvent, useRef, useState } from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport { priorityList } from '../../../constants/priorityList'\r\nimport { rolesList } from '../../../constants/rolesList'\r\nimport { imageToB64 } from '../../../Services/imageToB64'\r\nimport { projectState } from '../../../Enums/projectState'\r\nimport { Project } from '../../../Interfaces/project'\r\nimport { User } from '../../../Interfaces/user'\r\nimport { Select } from '../../../Ui/Select'\r\nimport './style.scss'\r\n\r\ninterface createUser {\r\n    createUser: Function;\r\n}\r\n\r\nexport const CreateUser: React.FunctionComponent<createUser> = (props) => {\r\n\r\n    const { register, setValue, handleSubmit, formState, errors, watch} = useForm<User>();\r\n    \r\n    const [img, setImg] = useState('');\r\n\r\n    const imageUpload = async (e: any) => {\r\n        let img: any = await imageToB64(e.files[0]);\r\n        setImg(img)\r\n    }\r\n\r\n    const imageUploadField = (e: DragEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let image = e.dataTransfer;\r\n        imageUpload(image)\r\n    }\r\n    \r\n    const password = useRef({});\r\n    password.current = watch('password','')\r\n    const onSubmit = (user: User) => {\r\n        const userForm = {\r\n            login: user.login,\r\n            name: user.name,\r\n            email: user.email,\r\n            role: user.role,\r\n            avatar: img,\r\n            password: user.password,\r\n            r_password: user.r_password,\r\n        }\r\n\r\n        props.createUser(userForm);\r\n        console.log(userForm)\r\n    \r\n    }    \r\n\r\n    \r\n\r\n    return(\r\n    <div className=\"createUser modal\">\r\n        <div className=\"modal-container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"createUser-container\">\r\n            \r\n                <div className=\"createUser-container__left\">\r\n                <div className=\"upload-field upload-avatar\" onDragOver={(e) => e.preventDefault()} onDrop={(e) => imageUploadField(e)}>\r\n                        <label className=\"upload-field__label\" htmlFor=\"img\"></label>\r\n                        <span className={`upload-field__span upload-avatar__span ${img && 'upload-field__span--active'}`}>Upload file</span>\r\n                        <img className={`upload-field__img ${img && 'upload-field__img--active'}`} src={img} />\r\n                    </div> \r\n                    <input hidden onChange={(e) => imageUpload(e.target)} id=\"img\" className=\"input\" type=\"file\" accept=\"image/*\" name=\"img\" ref={register} />  \r\n                </div>\r\n                <div className=\"createUser-container__right\">\r\n                \r\n                    <div className=\"createUser-container__item\">\r\n                        <input className=\"input createUser-container__input\" autoComplete=\"off\" placeholder=\"Enter login\" name=\"login\" ref={register({required: true})} />\r\n                        {errors.login && <span className=\"createUser-container__error\">Field is required</span>}\r\n                    </div>\r\n                    <div className=\"createUser-container__item\">\r\n                        <input className=\"input createUser-container__input\" autoComplete=\"off\" placeholder=\"Enter name\" name=\"name\" ref={register({required: true})} />\r\n                        {errors.name && <span className=\"createUser-container__error\">Field is required</span>}\r\n                    </div>\r\n                    <div className=\"createUser-container__item\">\r\n                        <input className=\"input createUser-container__input\" autoComplete=\"off\" placeholder=\"Enter email\" name=\"email\" ref={register({required: true})} />\r\n                        {errors.email && <span className=\"createUser-container__error\">Field is required</span>}\r\n                    </div>\r\n                    <div className=\"createUser-container__item\">\r\n                        <input className=\"input createUser-container__input\" autoComplete=\"off\" placeholder=\"Enter password\" name=\"password\" ref={register({required: true, minLength: 8})} />\r\n                        {errors.password && <span className=\"createUser-container__error\">Field is required</span>}\r\n                    </div>\r\n                    <div className=\"createUser-container__item\">\r\n                        <input className=\"input createUser-container__input\" autoComplete=\"off\" placeholder=\"Repeat password\" name=\"r_password\" ref={register({required: true, validate: value => value === password.current || 'ERROR'})} />\r\n                    </div>\r\n                    <div className=\"createUser-container__item\">\r\n                        <Select items={rolesList} default={0} name=\"role\" register={register({required: true})} placeholder={'user role'} />\r\n                        {errors.role && <span className=\"createUser-container__error\">Field is required</span>}\r\n                    </div>\r\n                    <div className=\"createUser-container__item\">\r\n                        <button className=\"button\" type=\"submit\">Create</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </form> \r\n        </div>\r\n    </div>\r\n    )\r\n}","D:\\web\\project\\src\\Pages\\Login\\index.tsx",["345","346","347"],"import React, {useState, useEffect} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux'\r\nimport * as projectsCreators from '../../Actions/userAction'\r\nimport { User } from '../../Interfaces/user';\r\nimport {login} from '../../Interfaces/login'\r\n\r\nimport './style.scss'\r\nimport { Preloader } from '../../Ui/Preloader';\r\nimport { State } from '../../Interfaces/state';\r\n\r\n//todo any types\r\n\r\nconst Login: React.FunctionComponent<login> = (props: any) => {\r\n\r\n    const { register, handleSubmit, errors} = useForm<User>();\r\n    const onSubmit = (user: User) => {\r\n        const userForm = {\r\n            login: user.login,\r\n            password: user.password,\r\n        }\r\n    \r\n        props.userLogin(userForm);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(props.isLogin){\r\n            props.history.push('/')\r\n        }\r\n\r\n    }, [props.isLogin])\r\n\r\n    return(\r\n        <div className=\"page f-page f-page--center\">\r\n            <div className=\"page__content f-page__content\">\r\n                {!props.isLogin && <form className=\"createUser\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"createUser__item\">\r\n                        <span className=\"createUser__span\">login: username</span>\r\n                        <span className=\"createUser__span\">password: 12345678</span>\r\n                    </div>\r\n                    <div className=\"createUser__item\">\r\n                        <input autoComplete=\"off\" placeholder=\"Enter login\" name=\"login\" ref={register({required: true})} />\r\n                        {errors.login && <span className=\"createUser__error\">Field is required</span>}\r\n                        \r\n                    </div>\r\n                    <div className=\"createUser__item\">\r\n                        <input autoComplete=\"off\" placeholder=\"Enter password\" name=\"password\" ref={register({required: true})} />\r\n                        {errors.password && <span className=\"createUser__error\">Field is required</span>}\r\n                    </div>\r\n                    <div className=\"createUser__item\">\r\n                        <button className=\"button\" type=\"submit\">Login</button>\r\n                    </div>\r\n                </form>\r\n                }\r\n            </div>\r\n        </div>\r\n        )\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        isLogin: state.user.isLogin\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return bindActionCreators(projectsCreators,dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","D:\\web\\project\\src\\Sagas\\user.tsx",["348","349","350","351","352"],"import { rejects } from \"assert\";\r\nimport { resolve } from \"path\";\r\nimport { all, call, put, takeEvery, takeLatest } from \"redux-saga/effects\"\r\nimport { User } from \"../Interfaces/user\";\r\n\r\n\r\nfunction* loginUser(user: any) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user.json)\r\n    };\r\n    const json = yield fetch(`/api/login/authenticate`, requestOptions).then(response => response.json())\r\n\r\n    if(!json.error){\r\n        localStorage.setItem('id', json.id);\r\n        yield all([\r\n            put({type:\"USER_LOGIN_RECEIVED\", json: json}),\r\n            put({type:\"ACTION\", json:{\r\n                status: 1,\r\n                title: 'LOGIN SUCCESS'\r\n                }})\r\n        ])\r\n    }else{\r\n        yield put({type:\"ACTION\", json: json.error})\r\n    }\r\n    \r\n}\r\n\r\nfunction* getUser(){\r\n    const token = localStorage.getItem('id');\r\n    // const json = yield fetch('/api/login', requestOptions).then(response => response.json(), )\r\n    const json = yield fetch(`/api/login/?id=${token}`).then(response => response.json())\r\n    yield put({type: \"USER_LOGIN_RECEIVED\", json: json})\r\n}\r\n\r\nfunction* actionUserWatcher() {\r\n    yield takeEvery(\"USER_LOGIN\", loginUser)\r\n    yield takeEvery(\"GET_USER\", getUser);\r\n}\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        actionUserWatcher(),\r\n    ]);\r\n}\r\n\r\n","D:\\web\\project\\src\\Reducers\\userReducer.tsx",["353","354","355","356","357","358"],"import { combineReducers } from \"redux\";\r\nimport { AppActions } from \"../constants/actionsTypes\";\r\nimport { ProjectDesk } from \"../Interfaces/projectDesk\";\r\nimport { User } from \"../Interfaces/user\";\r\nimport { AppState } from \"../store\";\r\n\r\ninterface initialUser {\r\n   user: User | null;\r\n   isLogin: boolean;\r\n}\r\n\r\nconst initialState: initialUser = {\r\n    user: null,\r\n    isLogin: false\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: AppActions) => {\r\n    switch(action.type) {\r\n        case 'USER_LOGIN':\r\n            return {...state};\r\n            break;\r\n        case 'USER_LOGIN_RECEIVED':\r\n            return {...state, user: action.json, isLogin: (action.json ? true : false)};\r\n            break;    \r\n        case 'USER_LOGOUT': \r\n            localStorage.removeItem('id');\r\n            return {...state, user: null, isLogin: false}\r\n            break;\r\n        case 'GET_USER':\r\n            return {...state}   \r\n        default:\r\n            return state\r\n    }\r\n}","D:\\web\\project\\src\\Actions\\userAction.tsx",[],"D:\\web\\project\\src\\Layouts\\header\\components\\user\\index.tsx",["359","360"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { userLogout } from '../../../../Actions/userAction';\r\nimport { State } from '../../../../Interfaces/state';\r\nimport { User } from '../../../../Interfaces/user';\r\n\r\nimport './style.scss';\r\n\r\nexport const UserInfo: React.FunctionComponent = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userInfo = useSelector((state: State) => state.user.user);\r\n    const logout = () => {\r\n        dispatch(userLogout());\r\n    }\r\n    \r\n    return(<div className=\"userInfo\">\r\n        <div className=\"userInfo-content\">\r\n            <div className=\"userInfo-content__img\">\r\n                \r\n            </div>\r\n            <div className=\"userInfo-content__title\">\r\n                Hi, {userInfo.name}\r\n            </div>\r\n        </div>\r\n        <div className=\"userInfo-menu\">\r\n            <ul>\r\n                <li><Link className=\"userInfo-link\" to={`/users/${userInfo.id}`}>Profile</Link></li>\r\n                <li><a className=\"userInfo-link\" onClick={() => logout()}>Logout</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>)\r\n}","D:\\web\\project\\src\\protectedRoute.tsx",["361","362"],"import { Component } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { User } from \"./Interfaces/user\";\r\nimport { Preloader } from \"./Ui/Preloader\";\r\n\r\ntype component = {\r\n    component: any,\r\n    isAuthenticaton: boolean,\r\n    projectLoaded: boolean,\r\n    path: any\r\n}\r\n\r\nexport const ProtectedRoute: React.FunctionComponent<component> = ({component: Component, isAuthenticaton, projectLoaded, ...rest}) =>{\r\n\r\n    let route = <Route \r\n    {...rest} \r\n    render={props =>{\r\n        if(isAuthenticaton){\r\n            return <Component {...props} />\r\n        }else{\r\n            return <Redirect to={{pathname: '/login', state: {from : props.location}}} />\r\n        }\r\n    }}></Route>\r\n\r\n    return (\r\n        projectLoaded === true ? route : <Preloader/>\r\n    )\r\n}","D:\\web\\project\\src\\Reducers\\usersReducer.tsx",["363","364","365","366","367","368","369"],"D:\\web\\project\\src\\Sagas\\users.tsx",["370","371","372","373","374"],"D:\\web\\project\\src\\Actions\\usersAction.tsx",["375"],"D:\\web\\project\\src\\constants\\rolesList.tsx",[],"D:\\web\\project\\src\\Enums\\roles.ts",[],"D:\\web\\project\\src\\Reducers\\tasksReducer.tsx",["376","377","378","379","380","381","382","383","384","385","386"],"import { Task } from \"redux-saga\";\r\nimport { AppActions } from \"../constants/actionsTypes\";\r\nimport { Card } from \"../Interfaces/card\";\r\n\r\ninterface initialTasks {\r\n   tasks: Card[],\r\n   loading: boolean\r\n}\r\n\r\nconst initialState: initialTasks = {\r\n    tasks: [],\r\n    loading: true\r\n}\r\n\r\nexport const tasksReducer = (state = initialState, action: AppActions) => {\r\n    switch(action.type) {\r\n        case 'GET_TASKS':\r\n            return {...state, loading: true};\r\n            break;\r\n        case 'TASKS_RECEIVED':\r\n            return {...state, tasks: action.json, loading: false};\r\n            break;    \r\n        case 'ADD_TASK': \r\n            return {...state}\r\n            break;\r\n        case 'ADD_TASK_RECEIVED':\r\n            return {...state, tasks: [...state.tasks, action.json]}\r\n            break;\r\n        case 'CHANGE_CARD_POSITION':\r\n            const card_index = state.tasks.findIndex((card: Card) => card.id === action.json.id)\r\n            let card = state.tasks[card_index];\r\n            const changeField = {...state.tasks.slice(0, card_index), card}\r\n            \r\n            card.status = Number(action.json.status)\r\n\r\n            if(action.testOrder !== null){\r\n\r\n                let testOrder = {\r\n                    ...state, tasks: [\r\n                        ...state.tasks.map((item: Card, index: number) => {\r\n\r\n                            /*if(index !== card_index){\r\n                                if(index > card_index && index > 0 && index <= action.testOrder){\r\n                                    item.order -= 1;\r\n                                }\r\n                                if(index < card_index && index >= action.testOrder){\r\n                                    item.order += 1;\r\n                                }\r\n                            }else{\r\n                                item.order = action.testOrder;\r\n                            }*/\r\n                            \r\n                            return item;\r\n                        })\r\n                    ]\r\n                }\r\n\r\n                return testOrder\r\n                \r\n            }else{\r\n                return {...state, tasks: [\r\n                    ...state.tasks, changeField\r\n                ]}   \r\n            }\r\n            \r\n            break;\r\n        case 'CHANGE_CARD_POSITION_RECEIVED':\r\n            return {...state}\r\n            break;\r\n        case 'REMOVE_CARD':\r\n            // todo edit saga\r\n            return {...state, tasks:[\r\n                ...state.tasks.filter((card: Card) => card.id != action.id)\r\n            ]}\r\n            break;\r\n        case 'REMOVE_CARD_RECEIVED':\r\n            return {...state, tasks:[\r\n                ...state.tasks.filter((card: Card) => card.id != action.id)\r\n            ]}\r\n            break;                \r\n        default:\r\n            return state\r\n    }\r\n}","D:\\web\\project\\src\\Pages\\Tasks\\index.tsx",["387","388","389","390"],"import React, { DragEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as tasksCreators from '../../Actions/tasksAction'\r\nimport { Button } from '../../Ui/Button';\r\nimport { Preloader } from '../../Ui/Preloader';\r\nimport {taskStatusList} from '../../constants/taskStatusList'\r\nimport { Card } from '../../Interfaces/card';\r\nimport './style.scss'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { projectPriority } from '../../Enums/projectPriority';\r\nimport { CreateCard } from './components/createCard/createCard';\r\nimport { TaskStatus } from '../../Enums/taskStatus';\r\nimport { priorityList } from '../../constants/priorityList';\r\nimport { Link } from 'react-router-dom';\r\nimport { cardTypesList } from '../../constants/cardTypes';\r\nimport { projectState } from '../../Enums/projectState';\r\nimport { State } from '../../Interfaces/state';\r\n\r\ninterface tasks {\r\n    getTasks: Function,\r\n    newTask: Function,\r\n    changeCardPosition: Function,\r\n    removeCard: Function,\r\n    userId: number,\r\n    match: any,\r\n    history: any,\r\n    tasks: Card[],\r\n    loading: boolean\r\n}\r\n\r\ninterface tasks_state {\r\n    createTaskForm: boolean,\r\n    testSortElement: number | null\r\n}\r\n\r\nclass Tasks extends React.Component<tasks, tasks_state> {\r\n\r\n    constructor(props: tasks){\r\n        super(props)\r\n        this.state = {\r\n            createTaskForm: false,\r\n            testSortElement: null\r\n        }\r\n\r\n        this.handleOnDrop = this.handleOnDrop.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    createTask = (card: Card) => {\r\n        this.props.newTask(card);\r\n        this.createTaskForm();\r\n    }\r\n    removeCard = (id: number) => this.props.removeCard(id);\r\n    createTaskForm = () => this.setState({createTaskForm: !this.state.createTaskForm})\r\n    \r\n    componentDidMount(){\r\n        this.props.getTasks(this.props.match.params.deskId, this.props.userId);\r\n    }\r\n\r\n    handleDragEnter(e: DragEvent){\r\n        e.currentTarget.classList.add('cards-field__content--active')\r\n    }\r\n\r\n    handleDragLeave(e: DragEvent){\r\n        e.currentTarget.classList.remove('cards-field__content--active') \r\n    }\r\n\r\n    handleOnDrop(e: DragEvent){\r\n        e.currentTarget.classList.remove('cards-field__content--active') \r\n        this.props.changeCardPosition(e.dataTransfer.getData('cardId'), e.currentTarget.id, this.state.testSortElement)\r\n    }\r\n\r\n    handleDragOver(e: DragEvent){\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleDragStart(e: any, cardId: number){\r\n        e.currentTarget.classList.add('card--active')\r\n        e.dataTransfer.setData('cardId', cardId)\r\n    }\r\n\r\n    handleDragEnd(e: DragEvent){\r\n        e.currentTarget.classList.remove('card--active')\r\n    }\r\n\r\n    // TEST SORTING */\r\n\r\n    getOrderOfElement(order: number){\r\n        this.setState({testSortElement: order});\r\n    }  \r\n\r\n    render(){\r\n        return(\r\n            <PerfectScrollbar>\r\n            <div className=\"page\">\r\n                    <div className=\"page-header\">\r\n                        <Button className={'page-header__button--left'} align=\"left\" title=\"TO PROJECT\" type=\"large\" img={'<i class=\"fas fa-chevron-left\"></i>'} onClick={this.props.history.goBack} />\r\n                        <div className=\"page-header__title\">\r\n                            <h2 className=\"page-title\">Tasks {this.props.tasks.length}</h2>\r\n                        </div> \r\n                        <Button className={'page-header__button'} align=\"right\" title=\"CREATE TASK\" titleActive=\"CLOSE TASK FORM\" type=\"large\" onClick={this.createTaskForm} active={this.state.createTaskForm} />\r\n                    </div>\r\n                    <div className=\"page-content\">\r\n                        {\r\n                            this.state.createTaskForm && <CreateCard createCard={this.createTask} />\r\n                        }\r\n                        {\r\n                        this.props.loading ? <Preloader /> : \r\n                            <div className={`cards ${this.state.createTaskForm ? 'cards--hidden' : ''}`}>\r\n                                {\r\n                                    taskStatusList.map(field => \r\n                                        <div key={field.id} className=\"cards-field\">\r\n                                            <div className=\"cards-field__title\">{field.name}</div>\r\n                                            <div id={(field.id as any)} className={`cards-field__content`} onDragEnter={this.handleDragEnter} onDragLeave={this.handleDragLeave} onDrop={this.handleOnDrop} onDragOver={this.handleDragOver}>\r\n                                                {\r\n                                                this.props.tasks.sort((a,b) => a.order - b.order).map(card =>\r\n                                                    \r\n                                                    (field.id == card.status) && <div onDragOver={() => this.getOrderOfElement(card.order)} key={card.id} className=\"card\" draggable={true} onDragStart={(e) => this.handleDragStart(e, card.id)} onDragEnd={this.handleDragEnd}>\r\n                                                        <div className=\"card__header\">\r\n                                                            <div className={`card__title ${(field.id as number) == projectState.complete ? 'card__title--complete' : ''}`}>\r\n                                                            <Link className=\"card__link\" to={`${this.props.match.params.deskId}/${card.id}`}>{card.title}</Link>\r\n                                                            </div>\r\n                                                            <div className={`card__type ${cardTypesList[card.type].color}`}>\r\n                                                            {cardTypesList[card.type].name}\r\n                                                            </div>\r\n                                                            <div className={`card__priority ${priorityList[card.priority].color}`}>\r\n                                                               \r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"card__content\">{card.content}</div>\r\n                                                    </div>\r\n                                                        \r\n                                                )\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </div>        \r\n                                    )\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </PerfectScrollbar>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        tasks: state.tasks.tasks,\r\n        userId: state.user.user?.id,\r\n        loading: state.tasks.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return bindActionCreators(tasksCreators, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks)","D:\\web\\project\\src\\Actions\\tasksAction.tsx",["391"],"import { Task } from 'redux-saga'\r\nimport  {actionsTypes, AppActions} from '../constants/actionsTypes'\r\nimport { Card } from '../Interfaces/card'\r\n\r\nexport const getTasks = (deskId: number, userId: number): AppActions => ({\r\n    type: actionsTypes.GET_TASKS,\r\n    json: {\r\n        deskId,\r\n        userId\r\n    }\r\n})\r\n\r\nexport const tasksReceived = (cards: Card[]): AppActions => ({\r\n    type: actionsTypes.TASKS_RECEIVED,\r\n    json: cards\r\n})\r\n\r\nexport const newTask = (card: Card): AppActions => ({\r\n    type: actionsTypes.ADD_TASK,\r\n    json: card\r\n})\r\n\r\nexport const newTaskReceived = (card: Card): AppActions => ({\r\n    type: actionsTypes.ADD_TASK_RECEIVED,\r\n    json: card\r\n})\r\n\r\nexport const removeCard = (id: number): AppActions => ({\r\n    type: actionsTypes.REMOVE_CARD,\r\n    id: id\r\n})\r\n\r\nexport const removeCardReceived = (id: number): AppActions => ({\r\n    type: actionsTypes.REMOVE_CARD_RECEIVED,\r\n    id: id\r\n})\r\n\r\nexport const changeCardPosition = (cardId: number, status: number, testOrder: number): AppActions => ({\r\n    type: actionsTypes.CHANGE_CARD_POSITION,\r\n    json: {\r\n        id: cardId,\r\n        status: status\r\n    },\r\n    testOrder: testOrder\r\n})\r\n\r\nexport const changeCardPositionReceived = (card: Card): AppActions => ({\r\n    type: actionsTypes.CHANGE_CARD_POSITION_RECEIVED,\r\n    json: card\r\n})","D:\\web\\project\\src\\Sagas\\tasks.tsx",["392","393","394","395","396"],"import { rejects } from \"assert\";\r\nimport { resolve } from \"path\";\r\nimport { all, call, put, takeEvery, takeLatest } from \"redux-saga/effects\"\r\n\r\n\r\nfunction* getTasks(action: any) {\r\n    const json = yield fetch(`/api/tasks/?deskId=${action.json.deskId}&userId=${action.json.userId}`).then(response => response.json(), )\r\n    yield put({type:\"TASKS_RECEIVED\", json: json})\r\n}\r\n\r\nfunction* addTask(action: any) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(action.json)\r\n    }\r\n    const json = yield fetch('/api/tasks', requestOptions).then(response => response.json())\r\n    yield all([\r\n        put({type: \"ADD_TASK_RECEIVED\", json: json}),\r\n        put({type:\"ACTION\", json:{\r\n            status: 1,\r\n            title: `NEW TASK ADDED`\r\n            }})\r\n    ])\r\n}\r\n\r\nfunction* changeTask(action: any){\r\n    /*const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(action.json)\r\n    }*/\r\n\r\n    //console.log(requestOptions)\r\n    const json = yield fetch(`/api/tasks/changeField/?id=${action.json.id}&status=${action.json.status}`).then(response => response.json())\r\n    //yield put({type: \"CHANGE_CARD_POSITION_RECEIVED\", json: json})\r\n}\r\n\r\nfunction* removeCard(action: any){\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(action.id)\r\n    }\r\n    const json = yield fetch(`/api/tasks/`, requestOptions).then(response => response)\r\n    yield all([\r\n        put({type: \"REMOVE_CARD_RECEIVED\", id: action.id}),\r\n        put({type:\"ACTION\", json:{\r\n            status: 1,\r\n            title: `TASK REMOVED`\r\n            }})\r\n    ])\r\n}\r\n\r\nfunction* actionTasksWatcher() {\r\n    yield takeEvery(\"GET_TASKS\", getTasks)\r\n    yield takeEvery(\"CHANGE_CARD_POSITION\", changeTask)\r\n    yield takeLatest(\"ADD_TASK\", addTask)\r\n    yield takeEvery(\"REMOVE_CARD\", removeCard)\r\n}\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        actionTasksWatcher(),\r\n    ]);\r\n}\r\n\r\n","D:\\web\\project\\src\\constants\\taskStatusList.tsx",[],"D:\\web\\project\\src\\Enums\\taskStatus.tsx",[],"D:\\web\\project\\src\\Pages\\Tasks\\components\\createCard\\createCard.tsx",["397","398","399","400","401","402","403"],"import { useRef } from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useLocation, useParams } from 'react-router'\r\nimport { priorityList } from '../../../../constants/priorityList'\r\nimport {cardTypesList} from '../../../../constants/cardTypes'\r\nimport { cardTypes } from '../../../../Enums/cardType'\r\nimport { Card } from '../../../../Interfaces/card'\r\nimport { Select } from '../../../../Ui/Select'\r\nimport './style.scss'\r\nimport { State } from '../../../../Interfaces/state'\r\n\r\ninterface createCard {\r\n    createCard: Function;\r\n}\r\n\r\nexport const CreateCard: React.FunctionComponent<createCard> = (props) => {\r\n\r\n    //todo any type\r\n\r\n    const id: any = useParams();\r\n    const userId = useSelector((state: State) => state.user.user.id)\r\n\r\n    console.log(props)\r\n\r\n    const { register, setValue, handleSubmit, formState, errors, watch} = useForm<Card>();\r\n    const onSubmit = (card: Card) => {\r\n        const cardForm = {\r\n          title: card.title,\r\n          content: card.content,\r\n          date: new Date(),\r\n          deskId: id.deskId,\r\n          type: card.type,\r\n          position: 0,\r\n          priority: card.priority,\r\n          projectId: id.projectId,\r\n          status: 0,\r\n          userId: userId\r\n        }\r\n\r\n        console.log(id.deskId)\r\n        props.createCard(cardForm);\r\n    \r\n    }    \r\n\r\n    \r\n\r\n    return(\r\n    <div className=\"createCard modal\">\r\n        <div className=\"modal-header\">\r\n            <h3 className=\"modal-header__title\">Create card</h3>\r\n        </div>\r\n        <div className=\"modal-container\">\r\n            <div className=\"createCard-container\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"createCard-container__left\">\r\n                        <div className=\"createCard-container__item\">\r\n                            <input className=\"createCard-container__input\" autoComplete=\"off\" placeholder=\"Enter title\" name=\"title\" ref={register({required: true})} />\r\n                            {errors.title && 'Field is required'}\r\n                        </div>\r\n                        <div className=\"createCard-container__item\">\r\n                            <input className=\"createCard-container__input\" autoComplete=\"off\" placeholder=\"Enter content\" name=\"content\" ref={register({required: true})} />\r\n                            {errors.content && 'Field is required'}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"createCard-container__right\">\r\n                        <div className=\"createCard-container__item\">\r\n                            <Select items={cardTypesList} name=\"type\" register={register({required: true})} placeholder={'Card type'} />\r\n                        </div>\r\n                        <div className=\"createCard-container__item\">\r\n                            <Select items={priorityList} name=\"priority\" register={register({required: true})} placeholder={'Priority'} />\r\n                        {errors.priority && 'Field is required'}\r\n                        </div>\r\n                        <div className=\"createCard-container__item\">\r\n                            <button className=\"button createCard-container__button\" type=\"submit\">Create card</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","D:\\web\\project\\src\\Services\\imageToB64.tsx",[],"D:\\web\\project\\src\\Pages\\Card\\index.tsx",["404","405","406","407"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport { Card } from '../../Interfaces/card';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as projectCreators from '../../Actions/cardAction'\r\nimport * as cardCreators from '../../Actions/tasksAction'\r\nimport { Preloader } from '../../Ui/Preloader';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Select } from '../../Ui/Select';\r\nimport { priorityList } from '../../constants/priorityList';\r\nimport { taskStatusList } from '../../constants/taskStatusList';\r\nimport { cardTypesList } from '../../constants/cardTypes';\r\nimport { Button } from '../../Ui/Button';\r\nimport { User } from '../../Interfaces/user';\r\nimport { State } from '../../Interfaces/state';\r\n\r\nimport './style.scss'\r\n\r\n\r\n// todo any types\r\n\r\ninterface card {\r\n    getCard: Function,\r\n    editCard: Function;\r\n    removeCard: Function;\r\n    loading: boolean,\r\n    match: any,\r\n    history: any,\r\n    card: Card,\r\n    users: User[]\r\n}\r\n\r\nconst CardComponent: React.FunctionComponent<card> = (props) => {\r\n\r\n     \r\n        const { register, setValue, handleSubmit, errors} = useForm();\r\n\r\n        useEffect(() => {\r\n            props.getCard(props.match.params.cardId); \r\n        }, [])\r\n\r\n        const removeCard = () => {\r\n            props.removeCard(props.match.params.cardId);\r\n            props.history.goBack()\r\n        }\r\n\r\n        const onSubmit = (card: Card) => {\r\n            const content = document.querySelector('#description')?.textContent;\r\n            const cardTitle = document.querySelector('#card-title')?.textContent;\r\n            const item = {\r\n                ...props.card,\r\n                title: cardTitle,\r\n                content: content,\r\n                status: card.status,\r\n                priority: card.priority,\r\n                type: card.type,\r\n                userId: card.userId\r\n            }\r\n    \r\n            props.editCard(props.card.id, item);\r\n            props.history.goBack();\r\n        }  \r\n\r\n\r\n        return(\r\n            props.loading ? <Preloader/> : <div className=\"page\">\r\n                    <div className=\"page-header\">\r\n                        <Button className={'page-header__button--left'} align=\"left\" title=\"TO TASKS\" type=\"large\" img={'<i class=\"fas fa-chevron-left\"></i>'} onClick={props.history.goBack} />\r\n                        <div className=\"page-header__title\">\r\n                            <h2 id=\"card-title\" className=\"page-header__editable\" suppressContentEditableWarning={true} contentEditable>{props.card.title}</h2>\r\n                        </div> \r\n                        <Button className={'page-header__button--right'} align=\"right\" title=\"REMOVE CARD\" type=\"large\" img={'<i class=\"far fa-trash-alt\"></i>'} onClick={removeCard} />\r\n                    </div>\r\n                    <div className=\"page-content\">\r\n                        <div className=\"cardPage\">\r\n                            <div className=\"cardPage-container\">\r\n                                <form onSubmit={handleSubmit(onSubmit)} className=\"cardPage-container__form\">\r\n                                    <div className=\"cardPage-container__left\">\r\n                                        <div className=\"cardPage-content\">\r\n                                                <div className=\"cardPage-content__description\">\r\n                                                    <label>Description</label>\r\n                                                    <span id=\"description\" suppressContentEditableWarning={true} contentEditable className=\"input\">\r\n                                                        {props.card.content}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"cardPage-content__imgLish cardPage-imgList\">\r\n                                                    \r\n                                                </div>\r\n                                                <div className=\"cardPage-content__comments\">\r\n\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"cardPage-container__right\">\r\n                                        <div className=\"cardPage-info\">\r\n                                            <div className=\"cardPage-info__user\">\r\n                                                {props.users.find(user => props.card.userId == user.id)?.name}\r\n                                            </div>\r\n                                            <div className=\"cardPage-info__type\">\r\n                                            <Select items={cardTypesList} default={props.card.type} name=\"type\" register={register({required: true})} placeholder={'Card type'} />\r\n                                            </div>\r\n                                            <div className=\"cardPage-info__priority\">\r\n                                            <Select items={priorityList} default={props.card.priority} name=\"priority\" register={register({required: true})} placeholder={'Card priority'} />\r\n                                            </div>\r\n                                            <div className=\"cardPage-info__status\">\r\n                                            <Select items={taskStatusList} default={props.card.status} name=\"status\" register={register({required: true})} placeholder={'Card status'} />\r\n                                            </div>\r\n                                            <div className=\"cardPage-info__date\">\r\n                                                {dayjs(props.card.date).format('HH:mm DD.MM.YY')}\r\n                                            </div>\r\n                                            <button className=\"button cardPage-info__button\" type=\"submit\">Update</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        card: state.card.card,\r\n        users: state.users.users,\r\n        loading: state.card.loading\r\n    }\r\n}\r\n\r\n//todo type dispatch\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return bindActionCreators({...projectCreators, ...cardCreators}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (CardComponent);\r\n    ","D:\\web\\project\\src\\Sagas\\card.tsx",["408","409","410","411","412","413"],"import { rejects } from \"assert\";\r\nimport { resolve } from \"path\";\r\nimport { all, call, put, takeEvery, takeLatest } from \"redux-saga/effects\"\r\nimport { Card } from \"../Interfaces/card\";\r\nimport { User } from \"../Interfaces/user\";\r\n\r\n\r\n//todo types any\r\n\r\nfunction* getCard(action: any) {\r\n    const json = yield fetch(`/api/tasks/${action.id}`).then(response => response.json())\r\n        yield put({type:\"CARD_RECEIVED\", json: json})\r\n}\r\n\r\nfunction* editCard(action: any){\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(action.json.card)\r\n    }\r\n\r\n    const json = yield fetch(`/api/tasks/${action.json.id}`, requestOptions).then(response => response.json())\r\n    console.log(json);\r\n    yield all([\r\n        put({type: \"EDIT_CARD_RECEIVED\", json: json}),\r\n        put({type:\"ACTION\", json:{\r\n            status: 1,\r\n            title: `CARD ${action.json.id} EDITED`\r\n            }})\r\n    ])\r\n}\r\n\r\nfunction* actionCardWatcher() {\r\n    yield takeEvery(\"GET_CARD\", getCard)\r\n    yield takeEvery(\"EDIT_CARD\", editCard);\r\n}\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        actionCardWatcher(),\r\n    ]);\r\n}\r\n\r\n","D:\\web\\project\\src\\Actions\\cardAction.tsx",["414"],"import { Task } from 'redux-saga'\r\nimport  {actionsTypes, AppActions} from '../constants/actionsTypes'\r\nimport { Card } from '../Interfaces/card'\r\n\r\nexport const getCard = (cardId: number): AppActions => ({\r\n    type: actionsTypes.GET_CARD,\r\n    id: cardId\r\n})\r\n\r\nexport const cardReceived = (card: Card): AppActions => ({\r\n    type: actionsTypes.CARD_RECEIVED,\r\n    json: card\r\n})\r\n\r\nexport const editCard = (cardId: number, card: Card): AppActions => ({\r\n    type: actionsTypes.EDIT_CARD,\r\n    json: {\r\n        id: cardId,\r\n        card: card\r\n    }\r\n})\r\n\r\nexport const editCardReceived = (card: Card): AppActions => ({\r\n    type: actionsTypes.EDIT_CARD_RECEIVED,\r\n    json: card\r\n})","D:\\web\\project\\src\\Interfaces\\card.tsx",[],["415","416"],"D:\\web\\project\\src\\Reducers\\mainReducer.tsx",["417","418","419"],"import { AppActions } from \"../constants/actionsTypes\";\r\nimport { Alert } from \"../Interfaces/alert\";\r\n\r\ninterface initialProject {\r\n    currentProject: number | string,\r\n    projectLoaded: boolean,\r\n    actions: Alert[]\r\n}\r\n\r\nconst initialProject: initialProject = {\r\n    currentProject: 0,\r\n    projectLoaded: false,\r\n    actions: []\r\n}\r\n\r\nexport const mainReducer = (state = initialProject, action: AppActions) => {\r\n    switch(action.type) {\r\n        case 'CURRENT_PROJECT':\r\n            return {...state, currentProject: action.project}\r\n            break;\r\n        case 'PROJECT_LOADED':\r\n            return {...state, projectLoaded: true}\r\n            break;\r\n        case 'ACTION':\r\n            return {...state, actions: [...state.actions, action.json]}      \r\n        default:\r\n            return state    \r\n    }\r\n}","D:\\web\\project\\src\\Actions\\main.tsx",[],"D:\\web\\project\\src\\constants\\cardTypes.tsx",[],"D:\\web\\project\\src\\Enums\\cardType.tsx",[],"D:\\web\\project\\src\\server.js",[],"D:\\web\\project\\src\\Reducers\\cardReducer.tsx",["420","421","422","423","424"],"import { Task } from \"redux-saga\";\r\nimport { AppActions } from \"../constants/actionsTypes\";\r\nimport { Card } from \"../Interfaces/card\";\r\n\r\ninterface initialTasks {\r\n   card: Card | null,\r\n   loading: boolean\r\n}\r\n\r\nconst initialState: initialTasks = {\r\n    card: null,\r\n    loading: true\r\n}\r\n\r\nexport const cardReducer = (state = initialState, action: AppActions) => {\r\n    switch(action.type) {\r\n        case 'GET_CARD':\r\n            return {...state, loading: true}\r\n            break;\r\n        case 'CARD_RECEIVED':\r\n            return {...state, card: action.json, loading: false}\r\n            break;\r\n        case 'EDIT_CARD':\r\n            return {...state}\r\n            break;\r\n        case 'EDIT_CARD_RECEIVED':\r\n            return {...state, card: action.json}\r\n            break;                      \r\n        default:\r\n            return state\r\n    }\r\n}","D:\\web\\project\\src\\Pages\\404\\index.tsx",[],"D:\\web\\project\\src\\Interfaces\\project.ts",[],"D:\\web\\project\\src\\Pages\\User\\index.tsx",["425","426","427","428","429","430","431"],"D:\\web\\project\\src\\Ui\\Alerts\\index.tsx",[],"D:\\web\\project\\src\\Ui\\Alerts\\components\\alert\\index.tsx",[],{"ruleId":"432","replacedBy":"433"},{"ruleId":"434","replacedBy":"435"},{"ruleId":"432","replacedBy":"433"},{"ruleId":"434","replacedBy":"435"},{"ruleId":"436","severity":1,"message":"437","line":1,"column":16,"nodeType":"438","messageId":"439","endLine":1,"endColumn":24},{"ruleId":"436","severity":1,"message":"440","line":2,"column":26,"nodeType":"438","messageId":"439","endLine":2,"endColumn":32},{"ruleId":"436","severity":1,"message":"441","line":2,"column":61,"nodeType":"438","messageId":"439","endLine":2,"endColumn":69},{"ruleId":"436","severity":1,"message":"442","line":2,"column":71,"nodeType":"438","messageId":"439","endLine":2,"endColumn":82},{"ruleId":"436","severity":1,"message":"443","line":2,"column":84,"nodeType":"438","messageId":"439","endLine":2,"endColumn":103},{"ruleId":"436","severity":1,"message":"444","line":20,"column":10,"nodeType":"438","messageId":"439","endLine":20,"endColumn":19},{"ruleId":"445","severity":1,"message":"446","line":39,"column":7,"nodeType":"447","endLine":39,"endColumn":11,"suggestions":"448"},{"ruleId":"449","severity":1,"message":"450","line":45,"column":88,"nodeType":"451","messageId":"452","endLine":45,"endColumn":90},{"ruleId":"445","severity":1,"message":"453","line":49,"column":7,"nodeType":"447","endLine":49,"endColumn":44,"suggestions":"454"},{"ruleId":"445","severity":1,"message":"455","line":49,"column":8,"nodeType":"456","endLine":49,"endColumn":43},{"ruleId":"457","severity":1,"message":"458","line":64,"column":68,"nodeType":"456","messageId":"459","endLine":64,"endColumn":70},{"ruleId":"457","severity":1,"message":"458","line":64,"column":85,"nodeType":"456","messageId":"459","endLine":64,"endColumn":87},{"ruleId":"436","severity":1,"message":"460","line":12,"column":10,"nodeType":"438","messageId":"439","endLine":12,"endColumn":25},{"ruleId":"436","severity":1,"message":"461","line":12,"column":28,"nodeType":"438","messageId":"439","endLine":12,"endColumn":41},{"ruleId":"445","severity":1,"message":"462","line":42,"column":7,"nodeType":"447","endLine":42,"endColumn":9,"suggestions":"463"},{"ruleId":"449","severity":1,"message":"450","line":81,"column":188,"nodeType":"451","messageId":"452","endLine":81,"endColumn":190},{"ruleId":"436","severity":1,"message":"464","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":19},{"ruleId":"436","severity":1,"message":"465","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":13},{"ruleId":"436","severity":1,"message":"466","line":1,"column":17,"nodeType":"438","messageId":"439","endLine":1,"endColumn":25},{"ruleId":"436","severity":1,"message":"467","line":3,"column":31,"nodeType":"438","messageId":"439","endLine":3,"endColumn":41},{"ruleId":"436","severity":1,"message":"468","line":9,"column":10,"nodeType":"438","messageId":"439","endLine":9,"endColumn":21},{"ruleId":"436","severity":1,"message":"469","line":11,"column":10,"nodeType":"438","messageId":"439","endLine":11,"endColumn":20},{"ruleId":"436","severity":1,"message":"470","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":25},{"ruleId":"436","severity":1,"message":"471","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":18},{"ruleId":"472","severity":1,"message":"473","line":22,"column":13,"nodeType":"474","messageId":"475","endLine":22,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":25,"column":13,"nodeType":"474","messageId":"475","endLine":25,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":28,"column":13,"nodeType":"474","messageId":"475","endLine":28,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":36,"column":13,"nodeType":"474","messageId":"475","endLine":36,"endColumn":19},{"ruleId":"436","severity":1,"message":"476","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":14},{"ruleId":"436","severity":1,"message":"468","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":21},{"ruleId":"436","severity":1,"message":"477","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"436","severity":1,"message":"478","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":3,"column":15,"nodeType":"438","messageId":"439","endLine":3,"endColumn":19},{"ruleId":"436","severity":1,"message":"480","line":33,"column":11,"nodeType":"438","messageId":"439","endLine":33,"endColumn":15},{"ruleId":"436","severity":1,"message":"481","line":1,"column":21,"nodeType":"438","messageId":"439","endLine":1,"endColumn":30},{"ruleId":"436","severity":1,"message":"482","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":22},{"ruleId":"436","severity":1,"message":"483","line":8,"column":10,"nodeType":"438","messageId":"439","endLine":8,"endColumn":16},{"ruleId":"436","severity":1,"message":"484","line":23,"column":23,"nodeType":"438","messageId":"439","endLine":23,"endColumn":31},{"ruleId":"485","severity":1,"message":"486","line":69,"column":25,"nodeType":"487","endLine":69,"endColumn":112},{"ruleId":"449","severity":1,"message":"450","line":19,"column":112,"nodeType":"451","messageId":"452","endLine":19,"endColumn":114},{"ruleId":"449","severity":1,"message":"450","line":26,"column":91,"nodeType":"451","messageId":"452","endLine":26,"endColumn":93},{"ruleId":"436","severity":1,"message":"488","line":42,"column":15,"nodeType":"438","messageId":"439","endLine":42,"endColumn":21},{"ruleId":"449","severity":1,"message":"450","line":55,"column":59,"nodeType":"451","messageId":"452","endLine":55,"endColumn":61},{"ruleId":"485","severity":1,"message":"486","line":56,"column":99,"nodeType":"487","endLine":56,"endColumn":146},{"ruleId":"436","severity":1,"message":"470","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":25},{"ruleId":"436","severity":1,"message":"471","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":18},{"ruleId":"472","severity":1,"message":"473","line":23,"column":13,"nodeType":"474","messageId":"475","endLine":23,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":26,"column":13,"nodeType":"474","messageId":"475","endLine":26,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":29,"column":13,"nodeType":"474","messageId":"475","endLine":29,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":32,"column":13,"nodeType":"474","messageId":"475","endLine":32,"endColumn":19},{"ruleId":"436","severity":1,"message":"468","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":21},{"ruleId":"436","severity":1,"message":"489","line":1,"column":15,"nodeType":"438","messageId":"439","endLine":1,"endColumn":18},{"ruleId":"436","severity":1,"message":"490","line":1,"column":20,"nodeType":"438","messageId":"439","endLine":1,"endColumn":30},{"ruleId":"436","severity":1,"message":"477","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"436","severity":1,"message":"478","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":3,"column":15,"nodeType":"438","messageId":"439","endLine":3,"endColumn":19},{"ruleId":"436","severity":1,"message":"490","line":3,"column":37,"nodeType":"438","messageId":"439","endLine":3,"endColumn":47},{"ruleId":"436","severity":1,"message":"482","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":22},{"ruleId":"436","severity":1,"message":"491","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":22},{"ruleId":"436","severity":1,"message":"492","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":17},{"ruleId":"436","severity":1,"message":"484","line":18,"column":23,"nodeType":"438","messageId":"439","endLine":18,"endColumn":31},{"ruleId":"436","severity":1,"message":"493","line":18,"column":47,"nodeType":"438","messageId":"439","endLine":18,"endColumn":56},{"ruleId":"485","severity":1,"message":"486","line":64,"column":25,"nodeType":"487","endLine":64,"endColumn":112},{"ruleId":"436","severity":1,"message":"437","line":1,"column":16,"nodeType":"438","messageId":"439","endLine":1,"endColumn":24},{"ruleId":"436","severity":1,"message":"444","line":10,"column":10,"nodeType":"438","messageId":"439","endLine":10,"endColumn":19},{"ruleId":"445","severity":1,"message":"494","line":33,"column":8,"nodeType":"447","endLine":33,"endColumn":23,"suggestions":"495"},{"ruleId":"436","severity":1,"message":"477","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"436","severity":1,"message":"478","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":3,"column":15,"nodeType":"438","messageId":"439","endLine":3,"endColumn":19},{"ruleId":"436","severity":1,"message":"490","line":3,"column":37,"nodeType":"438","messageId":"439","endLine":3,"endColumn":47},{"ruleId":"436","severity":1,"message":"496","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":14},{"ruleId":"436","severity":1,"message":"470","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":25},{"ruleId":"436","severity":1,"message":"468","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":21},{"ruleId":"436","severity":1,"message":"471","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":18},{"ruleId":"472","severity":1,"message":"473","line":21,"column":13,"nodeType":"474","messageId":"475","endLine":21,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":24,"column":13,"nodeType":"474","messageId":"475","endLine":24,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":28,"column":13,"nodeType":"474","messageId":"475","endLine":28,"endColumn":19},{"ruleId":"436","severity":1,"message":"496","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":14},{"ruleId":"497","severity":1,"message":"498","line":30,"column":21,"nodeType":"487","endLine":30,"endColumn":75},{"ruleId":"436","severity":1,"message":"499","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":19},{"ruleId":"436","severity":1,"message":"496","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":14},{"ruleId":"436","severity":1,"message":"470","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":25},{"ruleId":"436","severity":1,"message":"468","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":21},{"ruleId":"436","severity":1,"message":"471","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":18},{"ruleId":"472","severity":1,"message":"473","line":21,"column":13,"nodeType":"474","messageId":"475","endLine":21,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":24,"column":13,"nodeType":"474","messageId":"475","endLine":24,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":27,"column":13,"nodeType":"474","messageId":"475","endLine":27,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":30,"column":13,"nodeType":"474","messageId":"475","endLine":30,"endColumn":19},{"ruleId":"436","severity":1,"message":"477","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"436","severity":1,"message":"478","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":3,"column":15,"nodeType":"438","messageId":"439","endLine":3,"endColumn":19},{"ruleId":"436","severity":1,"message":"490","line":3,"column":37,"nodeType":"438","messageId":"439","endLine":3,"endColumn":47},{"ruleId":"436","severity":1,"message":"496","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":14},{"ruleId":"436","severity":1,"message":"500","line":3,"column":8,"nodeType":"438","messageId":"439","endLine":3,"endColumn":13},{"ruleId":"436","severity":1,"message":"476","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":14},{"ruleId":"472","severity":1,"message":"473","line":19,"column":13,"nodeType":"474","messageId":"475","endLine":19,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":22,"column":13,"nodeType":"474","messageId":"475","endLine":22,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":25,"column":13,"nodeType":"474","messageId":"475","endLine":25,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":28,"column":13,"nodeType":"474","messageId":"475","endLine":28,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":66,"column":13,"nodeType":"474","messageId":"475","endLine":66,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":69,"column":13,"nodeType":"474","messageId":"475","endLine":69,"endColumn":19},{"ruleId":"449","severity":1,"message":"501","line":73,"column":63,"nodeType":"451","messageId":"452","endLine":73,"endColumn":65},{"ruleId":"472","severity":1,"message":"473","line":75,"column":13,"nodeType":"474","messageId":"475","endLine":75,"endColumn":19},{"ruleId":"449","severity":1,"message":"501","line":78,"column":63,"nodeType":"451","messageId":"452","endLine":78,"endColumn":65},{"ruleId":"472","severity":1,"message":"473","line":80,"column":13,"nodeType":"474","messageId":"475","endLine":80,"endColumn":19},{"ruleId":"436","severity":1,"message":"502","line":12,"column":10,"nodeType":"438","messageId":"439","endLine":12,"endColumn":25},{"ruleId":"436","severity":1,"message":"503","line":14,"column":10,"nodeType":"438","messageId":"439","endLine":14,"endColumn":20},{"ruleId":"449","severity":1,"message":"450","line":121,"column":63,"nodeType":"451","messageId":"452","endLine":121,"endColumn":65},{"ruleId":"449","severity":1,"message":"450","line":123,"column":113,"nodeType":"451","messageId":"452","endLine":123,"endColumn":115},{"ruleId":"436","severity":1,"message":"476","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":14},{"ruleId":"436","severity":1,"message":"477","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"436","severity":1,"message":"478","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":3,"column":15,"nodeType":"438","messageId":"439","endLine":3,"endColumn":19},{"ruleId":"436","severity":1,"message":"480","line":35,"column":11,"nodeType":"438","messageId":"439","endLine":35,"endColumn":15},{"ruleId":"436","severity":1,"message":"480","line":45,"column":11,"nodeType":"438","messageId":"439","endLine":45,"endColumn":15},{"ruleId":"436","severity":1,"message":"504","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":16},{"ruleId":"436","severity":1,"message":"505","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":20},{"ruleId":"436","severity":1,"message":"442","line":4,"column":22,"nodeType":"438","messageId":"439","endLine":4,"endColumn":33},{"ruleId":"436","severity":1,"message":"506","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":19},{"ruleId":"436","severity":1,"message":"484","line":26,"column":23,"nodeType":"438","messageId":"439","endLine":26,"endColumn":31},{"ruleId":"436","severity":1,"message":"493","line":26,"column":47,"nodeType":"438","messageId":"439","endLine":26,"endColumn":56},{"ruleId":"436","severity":1,"message":"507","line":26,"column":66,"nodeType":"438","messageId":"439","endLine":26,"endColumn":71},{"ruleId":"436","severity":1,"message":"484","line":37,"column":27,"nodeType":"438","messageId":"439","endLine":37,"endColumn":35},{"ruleId":"436","severity":1,"message":"508","line":37,"column":51,"nodeType":"438","messageId":"439","endLine":37,"endColumn":57},{"ruleId":"445","severity":1,"message":"446","line":41,"column":12,"nodeType":"447","endLine":41,"endColumn":14,"suggestions":"509"},{"ruleId":"449","severity":1,"message":"450","line":98,"column":93,"nodeType":"451","messageId":"452","endLine":98,"endColumn":95},{"ruleId":"436","severity":1,"message":"477","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":17},{"ruleId":"436","severity":1,"message":"478","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":3,"column":15,"nodeType":"438","messageId":"439","endLine":3,"endColumn":19},{"ruleId":"436","severity":1,"message":"490","line":3,"column":37,"nodeType":"438","messageId":"439","endLine":3,"endColumn":47},{"ruleId":"436","severity":1,"message":"510","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":14},{"ruleId":"436","severity":1,"message":"496","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":14},{"ruleId":"436","severity":1,"message":"476","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":14},{"ruleId":"432","replacedBy":"511"},{"ruleId":"434","replacedBy":"512"},{"ruleId":"513","severity":1,"message":"514","line":10,"column":7,"nodeType":"438","messageId":"515","endLine":10,"endColumn":37},{"ruleId":"472","severity":1,"message":"473","line":20,"column":13,"nodeType":"474","messageId":"475","endLine":20,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":23,"column":13,"nodeType":"474","messageId":"475","endLine":23,"endColumn":19},{"ruleId":"436","severity":1,"message":"476","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":14},{"ruleId":"472","severity":1,"message":"473","line":19,"column":13,"nodeType":"474","messageId":"475","endLine":19,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":22,"column":13,"nodeType":"474","messageId":"475","endLine":22,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":25,"column":13,"nodeType":"474","messageId":"475","endLine":25,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":28,"column":13,"nodeType":"474","messageId":"475","endLine":28,"endColumn":19},{"ruleId":"436","severity":1,"message":"483","line":9,"column":10,"nodeType":"438","messageId":"439","endLine":9,"endColumn":16},{"ruleId":"436","severity":1,"message":"516","line":10,"column":10,"nodeType":"438","messageId":"439","endLine":10,"endColumn":19},{"ruleId":"436","severity":1,"message":"484","line":34,"column":23,"nodeType":"438","messageId":"439","endLine":34,"endColumn":31},{"ruleId":"436","severity":1,"message":"493","line":34,"column":47,"nodeType":"438","messageId":"439","endLine":34,"endColumn":56},{"ruleId":"449","severity":1,"message":"450","line":37,"column":56,"nodeType":"451","messageId":"452","endLine":37,"endColumn":58},{"ruleId":"445","severity":1,"message":"517","line":40,"column":8,"nodeType":"447","endLine":40,"endColumn":35,"suggestions":"518"},{"ruleId":"485","severity":1,"message":"486","line":91,"column":49,"nodeType":"487","endLine":91,"endColumn":140},"no-native-reassign",["519"],"no-negated-in-lhs",["520"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'RouteComponentProps' is defined but never used.","'Preloader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["521"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'match?.params.projectId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["522"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-mixed-operators","Unexpected mix of '&&' and '||'.","unexpectedMixedOperator","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","React Hook useEffect has a missing dependency: 'moveProjects'. Either include it or remove the dependency array.",["523"],"'RouteType' is defined but never used.","'Login' is defined but never used.","'Dispatch' is defined but never used.","'RouteProps' is defined but never used.","'ProjectDesk' is defined but never used.","'AppActions' is defined but never used.","'combineReducers' is defined but never used.","'AppState' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Task' is defined but never used.","'rejects' is defined but never used.","'resolve' is defined but never used.","'call' is defined but never used.","'json' is assigned a value but never used.","'FormEvent' is defined but never used.","'priorityList' is defined but never used.","'Select' is defined but never used.","'setValue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'select' is assigned a value but never used.","'put' is defined but never used.","'takeLatest' is defined but never used.","'projectState' is defined but never used.","'Project' is defined but never used.","'formState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["524"],"'User' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'Users' is defined but never used.","Expected '!==' and instead saw '!='.","'projectPriority' is defined but never used.","'TaskStatus' is defined but never used.","'useRef' is defined but never used.","'useHistory' is defined but never used.","'cardTypes' is defined but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.",["525"],"'Card' is defined but never used.",["519"],["520"],"@typescript-eslint/no-redeclare","'initialProject' is already defined.","redeclared","'rolesList' is defined but never used.","React Hook useEffect has a missing dependency: 'props.users'. Either include it or remove the dependency array.",["526"],"no-global-assign","no-unsafe-negation",{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},"Update the dependencies array to be: [ft, props]",{"range":"539","text":"540"},"Update the dependencies array to be: [match?.params.projectId, props]",{"range":"541","text":"542"},"Update the dependencies array to be: [moveProjects]",{"range":"543","text":"544"},"Update the dependencies array to be: [props.history, props.isLogin]",{"range":"545","text":"546"},"Update the dependencies array to be: [props]",{"range":"547","text":"548"},"Update the dependencies array to be: [props.match.params.userId, props.users]",{"range":"549","text":"550"},[1276,1280],"[ft, props]",[1555,1592],"[match?.params.projectId, props]",[1379,1381],"[moveProjects]",[930,945],"[props.history, props.isLogin]",[1274,1276],"[props]",[1330,1357],"[props.match.params.userId, props.users]"]